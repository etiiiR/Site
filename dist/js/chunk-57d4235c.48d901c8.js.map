{"version":3,"sources":["webpack:///./node_modules/bootstrap-vue/es/utils/tooltip.class.js","webpack:///./node_modules/bootstrap-vue/es/directives/popover/popover.js","webpack:///./src/views/components/JavascriptComponents/Tooltips.vue?4756","webpack:///src/views/components/JavascriptComponents/Tooltips.vue","webpack:///./src/views/components/JavascriptComponents/Tooltips.vue?d718","webpack:///./src/views/components/JavascriptComponents/Tooltips.vue","webpack:///./node_modules/bootstrap-vue/es/directives/tooltip/tooltip.js","webpack:///./node_modules/bootstrap-vue/es/utils/popover.class.js","webpack:///./node_modules/popper.js/dist/esm/popper.js","webpack:///./node_modules/bootstrap-vue/es/utils/bv-event.class.js"],"names":["exports","__esModule","default","_popper","_interopRequireDefault","__webpack_require__","_bvEvent","_noop","_array","_dom","_inspect","obj","_objectSpread","target","i","arguments","length","source","ownKeys","Object","keys","getOwnPropertySymbols","concat","filter","sym","getOwnPropertyDescriptor","enumerable","forEach","key","_defineProperty","value","defineProperty","configurable","writable","_classCallCheck","instance","Constructor","TypeError","_defineProperties","props","descriptor","_createClass","protoProps","staticProps","prototype","NAME","CLASS_PREFIX","BS_CLASS_PREFIX_REGEX","RegExp","TRANSITION_DURATION","MODAL_CLOSE_EVENT","MODAL_CLASS","AttachmentMap","AUTO","TOP","RIGHT","BOTTOM","LEFT","TOPLEFT","TOPRIGHT","RIGHTTOP","RIGHTBOTTOM","BOTTOMLEFT","BOTTOMRIGHT","LEFTTOP","LEFTBOTTOM","OffsetMap","HoverState","SHOW","OUT","ClassName","FADE","Selector","TOOLTIP","TOOLTIP_INNER","ARROW","Defaults","animation","template","trigger","title","delay","html","placement","offset","arrowPadding","container","fallbackPlacement","callbacks","boundary","boundaryPadding","TransitionEndEvents","WebkitTransition","MozTransition","OTransition","transition","EvtOpts","passive","capture","NEXTID","generateId","name","ToolTip","element","config","$root","this","$isEnabled","$fadeTimeout","$hoverTimeout","$visibleInterval","$hoverState","$activeTrigger","$popper","$element","$tip","$id","constructor","$routeWatcher","$forceHide","forceHide","bind","$doHide","doHide","$doShow","doShow","$doDisable","doDisable","$doEnable","doEnable","updateConfig","updatedConfig","Default","isNumber","show","hide","toString","content","fixTitle","$config","unListen","listen","setWhileOpenListeners","clearTimeout","destroy","parentElement","removeChild","enabledEvt","cancelable","relatedTarget","emitEvent","disabledEvt","event","click","isWithActiveTrigger","enter","leave","hasClass","getTipElement","_this","document","body","contains","isVisible","tip","setContent","isWithContent","setAttr","addAriaDescribedby","addClass","removeClass","getPlacement","attachment","getAttachment","addAttachmentClass","showEvt","defaultPrevented","getContainer","appendChild","removePopper","getPopperConfig","complete","fixTransition","prevHoverState","shownEvt","transitionOnce","on","_this2","clearInterval","setInterval","setModalListener","visibleCheck","setRouteWatcher","setOnTouchStartListener","test","eventOn","eventOff","callback","force","_this3","hideEvt","parentNode","removeAriaDescribedby","hiddenEvt","focus","hover","evt","evtName","type","$emit","isFunction","closest","select","desc","getAttr","split","join","trim","_this4","d","removeAttr","_this5","transEvents","getTransitionEndEvents","called","fnOnce","setTimeout","isUndefined","style","isNull","scheduleUpdate","Boolean","innerHTML","compileTemplate","tabIndex","isString","div","createElement","node","firstElementChild","setElementContent","getTitle","allowHtml","isObject","nodeType","innerText","_this6","triggers","el","setRootListener","_this7","events","e","isDisabled","toggle","_this8","$route","$watch","newVal","oldVal","modal","id","disable","enable","_this9","documentElement","from","children","_this10","_this11","_this12","modifiers","getOffset","flip","behavior","arrow","preventOverflow","padding","boundariesElement","onCreate","data","originalPlacement","handlePopperPlacementChange","onUpdate","arrowOffset","parseFloat","getCS","width","toUpperCase","call","tabClass","className","match","cls","cleanTipClass","initConfigAnimation","get","_default","VBPopover","_popover","_warn","_config","_env","_object","BV_POPOVER","validTriggers","blur","parseBindings","bindings","getComponentConfig","String","parseInt","arg","mod","slice","selectedTriggers","applyPopover","vnode","isBrowser","context","removePopover","inserted","update","oldValue","componentUpdated","unbind","render","_vm","_h","$createElement","_c","_self","staticClass","_v","directives","rawName","left","attrs","size","top","bottom","right","expression","staticRenderFns","Tooltipsvue_type_script_lang_js_","BTooltip","tooltip_default","a","BPopover","popover_default","JavascriptComponents_Tooltipsvue_type_script_lang_js_","component","componentNormalizer","__webpack_exports__","VBTooltip","_tooltip","BV_TOOLTIP","applyTooltip","removeTooltip","_typeof","Symbol","iterator","_possibleConstructorReturn","self","_assertThisInitialized","ReferenceError","_getPrototypeOf","o","setPrototypeOf","getPrototypeOf","__proto__","_inherits","subClass","superClass","create","_setPrototypeOf","p","TITLE","CONTENT","PopOver","_ToolTip","apply","hasTitle","hasContent","getContent","r","global","window","longerTimeoutBrowsers","timeoutDuration","navigator","userAgent","indexOf","microtaskDebounce","fn","Promise","resolve","then","taskDebounce","scheduled","supportsMicroTasks","debounce","functionToCheck","getType","getStyleComputedProperty","property","ownerDocument","defaultView","css","getComputedStyle","getParentNode","nodeName","host","getScrollParent","_getStyleComputedProp","overflow","overflowX","overflowY","isIE11","MSInputMethodContext","documentMode","isIE10","isIE","version","getOffsetParent","noOffsetParent","offsetParent","nextElementSibling","isOffsetContainer","getRoot","findCommonOffsetParent","element1","element2","order","compareDocumentPosition","Node","DOCUMENT_POSITION_FOLLOWING","start","end","range","createRange","setStart","setEnd","commonAncestorContainer","element1root","getScroll","side","undefined","upperSide","scrollingElement","includeScroll","rect","subtract","scrollTop","scrollLeft","modifier","getBordersSize","styles","axis","sideA","sideB","getSize","computedStyle","Math","max","getWindowSizes","height","classCallCheck","createClass","defineProperties","_extends","assign","hasOwnProperty","getClientRect","offsets","getBoundingClientRect","result","sizes","clientWidth","clientHeight","horizScrollbar","offsetWidth","vertScrollbar","offsetHeight","getOffsetRectRelativeToArbitraryNode","parent","fixedPosition","isHTML","childrenRect","parentRect","scrollParent","borderTopWidth","borderLeftWidth","marginTop","marginLeft","getViewportOffsetRectRelativeToArtbitraryNode","excludeScroll","relativeOffset","innerWidth","innerHeight","isFixed","getFixedPositionOffsetParent","getBoundaries","popper","reference","boundaries","boundariesNode","_getWindowSizes","isPaddingNumber","getArea","_ref","computeAutoPlacement","refRect","rects","sortedAreas","map","area","sort","b","filteredAreas","_ref2","computedPlacement","variation","getReferenceOffsets","state","commonOffsetParent","getOuterSizes","x","marginBottom","y","marginRight","getOppositePlacement","hash","replace","matched","getPopperOffsets","referenceOffsets","popperRect","popperOffsets","isHoriz","mainSide","secondarySide","measurement","secondaryMeasurement","find","arr","check","Array","findIndex","prop","cur","runModifiers","ends","modifiersToRun","console","warn","enabled","isDestroyed","arrowStyles","attributes","flipped","options","positionFixed","position","isCreated","isModifierEnabled","modifierName","some","getSupportedPropertyName","prefixes","upperProp","charAt","prefix","toCheck","removeAttribute","willChange","disableEventListeners","removeOnDestroy","getWindow","attachToScrollParents","scrollParents","isBody","addEventListener","push","setupEventListeners","updateBound","scrollElement","eventsEnabled","enableEventListeners","removeEventListeners","removeEventListener","cancelAnimationFrame","isNumeric","n","isNaN","isFinite","setStyles","unit","setAttributes","setAttribute","applyStyle","arrowElement","applyStyleOnLoad","modifierOptions","getRoundedOffsets","shouldRound","_data$offsets","round","floor","noRound","v","referenceWidth","popperWidth","isVertical","isVariation","sameWidthParity","bothOddWidth","horizontalToInteger","verticalToInteger","isFirefox","computeStyle","legacyGpuAccelerationOption","gpuAcceleration","offsetParentRect","devicePixelRatio","prefixedProperty","invertTop","invertLeft","x-placement","isModifierRequired","requestingName","requestedName","requesting","isRequired","_requesting","requested","_data$offsets$arrow","querySelector","len","sideCapitalized","toLowerCase","altSide","opSide","arrowElementSize","center","popperMarginSide","popperBorderSide","sideValue","min","getOppositeVariation","placements","validPlacements","clockwise","counter","index","reverse","BEHAVIORS","FLIP","CLOCKWISE","COUNTERCLOCKWISE","placementOpposite","flipOrder","step","refOffsets","overlapsRef","overflowsLeft","overflowsRight","overflowsTop","overflowsBottom","overflowsBoundaries","flippedVariationByRef","flipVariations","flippedVariationByContent","flipVariationsByContent","flippedVariation","keepTogether","toValue","str","parseOffset","basePlacement","useHeight","fragments","frag","divider","search","splitRegex","ops","op","mergeWithPrevious","reduce","index2","transformProp","popperStyles","transform","priority","primary","escapeWithReference","secondary","shift","shiftvariation","shiftOffsets","bound","inner","subtractLength","onLoad","Popper","requestAnimationFrame","jquery","Utils","PopperUtils","BvEvent","eventInit","readonlyDescriptor","nativeEvent","vueTarget","componentId","preventDefault"],"mappings":"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","file":"js/chunk-57d4235c.48d901c8.js","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _popper = _interopRequireDefault(require(\"popper.js\"));\n\nvar _bvEvent = _interopRequireDefault(require(\"./bv-event.class\"));\n\nvar _noop = _interopRequireDefault(require(\"./noop\"));\n\nvar _array = require(\"./array\");\n\nvar _dom = require(\"./dom\");\n\nvar _inspect = require(\"./inspect\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar NAME = 'tooltip';\nvar CLASS_PREFIX = 'bs-tooltip';\nvar BS_CLASS_PREFIX_REGEX = new RegExp(\"\\\\b\".concat(CLASS_PREFIX, \"\\\\S+\"), 'g');\nvar TRANSITION_DURATION = 150; // Modal $root hidden event\n\nvar MODAL_CLOSE_EVENT = 'bv::modal::hidden'; // Modal container for appending tooltip/popover\n\nvar MODAL_CLASS = '.modal-content';\nvar AttachmentMap = {\n  AUTO: 'auto',\n  TOP: 'top',\n  RIGHT: 'right',\n  BOTTOM: 'bottom',\n  LEFT: 'left',\n  TOPLEFT: 'top',\n  TOPRIGHT: 'top',\n  RIGHTTOP: 'right',\n  RIGHTBOTTOM: 'right',\n  BOTTOMLEFT: 'bottom',\n  BOTTOMRIGHT: 'bottom',\n  LEFTTOP: 'left',\n  LEFTBOTTOM: 'left'\n};\nvar OffsetMap = {\n  AUTO: 0,\n  TOPLEFT: -1,\n  TOP: 0,\n  TOPRIGHT: +1,\n  RIGHTTOP: -1,\n  RIGHT: 0,\n  RIGHTBOTTOM: +1,\n  BOTTOMLEFT: -1,\n  BOTTOM: 0,\n  BOTTOMRIGHT: +1,\n  LEFTTOP: -1,\n  LEFT: 0,\n  LEFTBOTTOM: +1\n};\nvar HoverState = {\n  SHOW: 'show',\n  OUT: 'out'\n};\nvar ClassName = {\n  FADE: 'fade',\n  SHOW: 'show'\n};\nvar Selector = {\n  TOOLTIP: '.tooltip',\n  TOOLTIP_INNER: '.tooltip-inner',\n  ARROW: '.arrow'\n};\nvar Defaults = {\n  animation: true,\n  template: '<div class=\"tooltip\" role=\"tooltip\">' + '<div class=\"arrow\"></div>' + '<div class=\"tooltip-inner\"></div>' + '</div>',\n  trigger: 'hover focus',\n  title: '',\n  delay: 0,\n  html: false,\n  placement: 'top',\n  offset: 0,\n  arrowPadding: 6,\n  container: false,\n  fallbackPlacement: 'flip',\n  callbacks: {},\n  boundary: 'scrollParent',\n  boundaryPadding: 5 // Transition event names\n\n};\nvar TransitionEndEvents = {\n  WebkitTransition: ['webkitTransitionEnd'],\n  MozTransition: ['transitionend'],\n  OTransition: ['otransitionend', 'oTransitionEnd'],\n  transition: ['transitionend'] // Options for Native Event Listeners (since we never call preventDefault)\n\n};\nvar EvtOpts = {\n  passive: true,\n  capture: false // Client-side tip ID counter for aria-describedby attribute\n  // Each tooltip requires a unique client side ID\n\n};\nvar NEXTID = 1;\n/* istanbul ignore next */\n\nvar generateId = function generateId(name) {\n  return \"__BV_\".concat(name, \"_\").concat(NEXTID++, \"__\");\n};\n/*\n * ToolTip class definition\n */\n\n\nvar ToolTip =\n/*#__PURE__*/\nfunction () {\n  // Main constructor\n  function ToolTip(element, config, $root) {\n    _classCallCheck(this, ToolTip);\n\n    // New tooltip object\n    this.$isEnabled = true;\n    this.$fadeTimeout = null;\n    this.$hoverTimeout = null;\n    this.$visibleInterval = null;\n    this.$hoverState = '';\n    this.$activeTrigger = {};\n    this.$popper = null;\n    this.$element = element;\n    this.$tip = null;\n    this.$id = generateId(this.constructor.NAME);\n    this.$root = $root || null;\n    this.$routeWatcher = null; // We use a bound version of the following handlers for root/modal\n    // listeners to maintain the 'this' context\n\n    this.$forceHide = this.forceHide.bind(this);\n    this.$doHide = this.doHide.bind(this);\n    this.$doShow = this.doShow.bind(this);\n    this.$doDisable = this.doDisable.bind(this);\n    this.$doEnable = this.doEnable.bind(this);\n    this._noop = _noop.default.bind(this); // Set the configuration\n\n    this.updateConfig(config);\n  } // NOTE: Overridden by PopOver class\n\n\n  _createClass(ToolTip, [{\n    key: \"updateConfig\",\n    // Update config\n    value: function updateConfig(config) {\n      // Merge config into defaults. We use \"this\" here because PopOver overrides Default\n      var updatedConfig = _objectSpread({}, this.constructor.Default, config); // Sanitize delay\n\n\n      if (config.delay && (0, _inspect.isNumber)(config.delay)) {\n        /* istanbul ignore next */\n        updatedConfig.delay = {\n          show: config.delay,\n          hide: config.delay\n        };\n      } // Title for tooltip and popover\n\n\n      if (config.title && (0, _inspect.isNumber)(config.title)) {\n        /* istanbul ignore next */\n        updatedConfig.title = config.title.toString();\n      } // Content only for popover\n\n\n      if (config.content && (0, _inspect.isNumber)(config.content)) {\n        /* istanbul ignore next */\n        updatedConfig.content = config.content.toString();\n      } // Hide element original title if needed\n\n\n      this.fixTitle(); // Update the config\n\n      this.$config = updatedConfig; // Stop/Restart listening\n\n      this.unListen();\n      this.listen();\n    } // Destroy this instance\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      // Stop listening to trigger events\n      this.unListen(); // Disable while open listeners/watchers\n\n      this.setWhileOpenListeners(false); // Clear any timeouts\n\n      clearTimeout(this.$hoverTimeout);\n      this.$hoverTimeout = null;\n      clearTimeout(this.$fadeTimeout);\n      this.$fadeTimeout = null; // Remove popper\n\n      if (this.$popper) {\n        this.$popper.destroy();\n      }\n\n      this.$popper = null; // Remove tip from document\n\n      if (this.$tip && this.$tip.parentElement) {\n        this.$tip.parentElement.removeChild(this.$tip);\n      }\n\n      this.$tip = null; // Null out other properties\n\n      this.$id = null;\n      this.$isEnabled = null;\n      this.$root = null;\n      this.$element = null;\n      this.$config = null;\n      this.$hoverState = null;\n      this.$activeTrigger = null;\n      this.$forceHide = null;\n      this.$doHide = null;\n      this.$doShow = null;\n      this.$doDisable = null;\n      this.$doEnable = null;\n    }\n  }, {\n    key: \"enable\",\n    value: function enable() {\n      // Create a non-cancelable BvEvent\n      var enabledEvt = new _bvEvent.default('enabled', {\n        cancelable: false,\n        target: this.$element,\n        relatedTarget: null\n      });\n      this.$isEnabled = true;\n      this.emitEvent(enabledEvt);\n    }\n  }, {\n    key: \"disable\",\n    value: function disable() {\n      // Create a non-cancelable BvEvent\n      var disabledEvt = new _bvEvent.default('disabled', {\n        cancelable: false,\n        target: this.$element,\n        relatedTarget: null\n      });\n      this.$isEnabled = false;\n      this.emitEvent(disabledEvt);\n    } // Click toggler\n\n  }, {\n    key: \"toggle\",\n    value: function toggle(event) {\n      if (!this.$isEnabled) {\n        /* istanbul ignore next */\n        return;\n      }\n      /* istanbul ignore else */\n\n\n      if (event) {\n        this.$activeTrigger.click = !this.$activeTrigger.click;\n\n        if (this.isWithActiveTrigger()) {\n          this.enter(null);\n        } else {\n          this.leave(null);\n        }\n      } else {\n        if ((0, _dom.hasClass)(this.getTipElement(), ClassName.SHOW)) {\n          this.leave(null);\n        } else {\n          this.enter(null);\n        }\n      }\n    } // Show tooltip\n\n  }, {\n    key: \"show\",\n    value: function show() {\n      var _this = this;\n\n      if (!document.body.contains(this.$element) || !(0, _dom.isVisible)(this.$element)) {\n        // If trigger element isn't in the DOM or is not visible\n        return;\n      } // Build tooltip element (also sets this.$tip)\n\n\n      var tip = this.getTipElement();\n      this.fixTitle();\n      this.setContent(tip);\n\n      if (!this.isWithContent(tip)) {\n        // If no content, don't bother showing\n\n        /* istanbul ignore next */\n        this.$tip = null;\n        /* istanbul ignore next */\n\n        return;\n      } // Set ID on tip and aria-describedby on element\n\n\n      (0, _dom.setAttr)(tip, 'id', this.$id);\n      this.addAriaDescribedby(); // Set animation on or off\n\n      if (this.$config.animation) {\n        (0, _dom.addClass)(tip, ClassName.FADE);\n      } else {\n        (0, _dom.removeClass)(tip, ClassName.FADE);\n      }\n\n      var placement = this.getPlacement();\n      var attachment = this.constructor.getAttachment(placement);\n      this.addAttachmentClass(attachment); // Create a cancelable BvEvent\n\n      var showEvt = new _bvEvent.default('show', {\n        cancelable: true,\n        target: this.$element,\n        relatedTarget: tip\n      });\n      this.emitEvent(showEvt);\n\n      if (showEvt.defaultPrevented) {\n        // Don't show if event cancelled\n        this.$tip = null;\n        return;\n      } // Insert tooltip if needed\n\n\n      var container = this.getContainer();\n\n      if (!document.body.contains(tip)) {\n        container.appendChild(tip);\n      } // Refresh popper\n\n\n      this.removePopper();\n      this.$popper = new _popper.default(this.$element, tip, this.getPopperConfig(placement, tip)); // Transitionend callback\n\n      var complete = function complete() {\n        if (_this.$config.animation) {\n          _this.fixTransition(tip);\n        }\n\n        var prevHoverState = _this.$hoverState;\n        _this.$hoverState = null;\n\n        if (prevHoverState === HoverState.OUT) {\n          _this.leave(null);\n        } // Create a non-cancelable BvEvent\n\n\n        var shownEvt = new _bvEvent.default('shown', {\n          cancelable: false,\n          target: _this.$element,\n          relatedTarget: tip\n        });\n\n        _this.emitEvent(shownEvt);\n      }; // Enable while open listeners/watchers\n\n\n      this.setWhileOpenListeners(true); // Show tip\n\n      (0, _dom.addClass)(tip, ClassName.SHOW); // Start the transition/animation\n\n      this.transitionOnce(tip, complete);\n    } // Handler for periodic visibility check\n\n  }, {\n    key: \"visibleCheck\",\n    value: function visibleCheck(on) {\n      var _this2 = this;\n\n      clearInterval(this.$visibleInterval);\n      this.$visibleInterval = null;\n\n      if (on) {\n        this.$visibleInterval = setInterval(function () {\n          var tip = _this2.$tip;\n\n          if (tip && !(0, _dom.isVisible)(_this2.$element) && (0, _dom.hasClass)(tip, ClassName.SHOW)) {\n            // Element is no longer visible, so force-hide the tooltip\n            _this2.forceHide();\n          }\n        }, 100);\n      }\n    }\n  }, {\n    key: \"setWhileOpenListeners\",\n    value: function setWhileOpenListeners(on) {\n      // Modal close events\n      this.setModalListener(on); // Periodic $element visibility check\n      // For handling when tip is in <keepalive>, tabs, carousel, etc\n\n      this.visibleCheck(on); // Route change events\n\n      this.setRouteWatcher(on); // On-touch start listeners\n\n      this.setOnTouchStartListener(on);\n\n      if (on && /(focus|blur)/.test(this.$config.trigger)) {\n        // If focus moves between trigger element and tip container, don't close\n        (0, _dom.eventOn)(this.$tip, 'focusout', this, EvtOpts);\n      } else {\n        (0, _dom.eventOff)(this.$tip, 'focusout', this, EvtOpts);\n      }\n    } // Force hide of tip (internal method)\n\n  }, {\n    key: \"forceHide\",\n    value: function forceHide() {\n      if (!this.$tip || !(0, _dom.hasClass)(this.$tip, ClassName.SHOW)) {\n        /* istanbul ignore next */\n        return;\n      } // Disable while open listeners/watchers\n\n\n      this.setWhileOpenListeners(false); // Clear any hover enter/leave event\n\n      clearTimeout(this.$hoverTimeout);\n      this.$hoverTimeout = null;\n      this.$hoverState = ''; // Hide the tip\n\n      this.hide(null, true);\n    } // Hide tooltip\n\n  }, {\n    key: \"hide\",\n    value: function hide(callback, force) {\n      var _this3 = this;\n\n      var tip = this.$tip;\n\n      if (!tip) {\n        /* istanbul ignore next */\n        return;\n      } // Create a cancelable BvEvent\n\n\n      var hideEvt = new _bvEvent.default('hide', {\n        // We disable cancelling if force is true\n        cancelable: !force,\n        target: this.$element,\n        relatedTarget: tip\n      });\n      this.emitEvent(hideEvt);\n\n      if (hideEvt.defaultPrevented) {\n        // Don't hide if event cancelled\n        return;\n      } // Transitionend callback\n\n\n      var complete = function complete() {\n        if (_this3.$hoverState !== HoverState.SHOW && tip.parentNode) {\n          // Remove tip from DOM, and force recompile on next show\n          tip.parentNode.removeChild(tip);\n\n          _this3.removeAriaDescribedby();\n\n          _this3.removePopper();\n\n          _this3.$tip = null;\n        }\n\n        if (callback) {\n          callback();\n        } // Create a non-cancelable BvEvent\n\n\n        var hiddenEvt = new _bvEvent.default('hidden', {\n          cancelable: false,\n          target: _this3.$element,\n          relatedTarget: null\n        });\n\n        _this3.emitEvent(hiddenEvt);\n      }; // Disable while open listeners/watchers\n\n\n      this.setWhileOpenListeners(false); // If forced close, disable animation\n\n      if (force) {\n        (0, _dom.removeClass)(tip, ClassName.FADE);\n      } // Hide tip\n\n\n      (0, _dom.removeClass)(tip, ClassName.SHOW);\n      this.$activeTrigger.click = false;\n      this.$activeTrigger.focus = false;\n      this.$activeTrigger.hover = false; // Start the hide transition\n\n      this.transitionOnce(tip, complete);\n      this.$hoverState = '';\n    }\n  }, {\n    key: \"emitEvent\",\n    value: function emitEvent(evt) {\n      var evtName = evt.type;\n\n      if (this.$root && this.$root.$emit) {\n        // Emit an event on $root\n        this.$root.$emit(\"bv::\".concat(this.constructor.NAME, \"::\").concat(evtName), evt);\n      }\n\n      var callbacks = this.$config.callbacks || {};\n\n      if ((0, _inspect.isFunction)(callbacks[evtName])) {\n        callbacks[evtName](evt);\n      }\n    }\n  }, {\n    key: \"getContainer\",\n    value: function getContainer() {\n      var container = this.$config.container;\n      var body = document.body; // If we are in a modal, we append to the modal instead of body,\n      // unless a container is specified\n\n      return container === false ? (0, _dom.closest)(MODAL_CLASS, this.$element) || body : (0, _dom.select)(container, body) || body;\n    } // Will be overridden by PopOver if needed\n\n  }, {\n    key: \"addAriaDescribedby\",\n    value: function addAriaDescribedby() {\n      // Add aria-describedby on trigger element, without removing any other IDs\n      var desc = (0, _dom.getAttr)(this.$element, 'aria-describedby') || '';\n      desc = desc.split(/\\s+/).concat(this.$id).join(' ').trim();\n      (0, _dom.setAttr)(this.$element, 'aria-describedby', desc);\n    } // Will be overridden by PopOver if needed\n\n  }, {\n    key: \"removeAriaDescribedby\",\n    value: function removeAriaDescribedby() {\n      var _this4 = this;\n\n      var desc = (0, _dom.getAttr)(this.$element, 'aria-describedby') || '';\n      desc = desc.split(/\\s+/).filter(function (d) {\n        return d !== _this4.$id;\n      }).join(' ').trim();\n\n      if (desc) {\n        /* istanbul ignore next */\n        (0, _dom.setAttr)(this.$element, 'aria-describedby', desc);\n      } else {\n        (0, _dom.removeAttr)(this.$element, 'aria-describedby');\n      }\n    }\n  }, {\n    key: \"removePopper\",\n    value: function removePopper() {\n      if (this.$popper) {\n        this.$popper.destroy();\n      }\n\n      this.$popper = null;\n    }\n  }, {\n    key: \"transitionOnce\",\n    value: function transitionOnce(tip, complete) {\n      var _this5 = this;\n\n      var transEvents = this.getTransitionEndEvents();\n      var called = false;\n      clearTimeout(this.$fadeTimeout);\n      this.$fadeTimeout = null;\n\n      var fnOnce = function fnOnce() {\n        if (called) {\n          /* istanbul ignore next */\n          return;\n        }\n\n        called = true;\n        clearTimeout(_this5.$fadeTimeout);\n        _this5.$fadeTimeout = null;\n        transEvents.forEach(function (evtName) {\n          (0, _dom.eventOff)(tip, evtName, fnOnce, EvtOpts);\n        }); // Call complete callback\n\n        complete();\n      };\n\n      if ((0, _dom.hasClass)(tip, ClassName.FADE)) {\n        transEvents.forEach(function (evtName) {\n          (0, _dom.eventOn)(tip, evtName, fnOnce, EvtOpts);\n        }); // Fallback to setTimeout()\n\n        this.$fadeTimeout = setTimeout(fnOnce, TRANSITION_DURATION);\n      } else {\n        fnOnce();\n      }\n    } // What transitionend event(s) to use? (returns array of event names)\n\n  }, {\n    key: \"getTransitionEndEvents\",\n    value: function getTransitionEndEvents() {\n      for (var name in TransitionEndEvents) {\n        if (!(0, _inspect.isUndefined)(this.$element.style[name])) {\n          return TransitionEndEvents[name];\n        }\n      } // Fallback\n\n      /* istanbul ignore next */\n\n\n      return [];\n    }\n    /* istanbul ignore next */\n\n  }, {\n    key: \"update\",\n    value: function update() {\n      if (!(0, _inspect.isNull)(this.$popper)) {\n        this.$popper.scheduleUpdate();\n      }\n    } // NOTE: Overridden by PopOver class\n\n  }, {\n    key: \"isWithContent\",\n    value: function isWithContent(tip) {\n      tip = tip || this.$tip;\n\n      if (!tip) {\n        /* istanbul ignore next */\n        return false;\n      }\n\n      return Boolean(((0, _dom.select)(Selector.TOOLTIP_INNER, tip) || {}).innerHTML);\n    } // NOTE: Overridden by PopOver class\n\n  }, {\n    key: \"addAttachmentClass\",\n    value: function addAttachmentClass(attachment) {\n      (0, _dom.addClass)(this.getTipElement(), \"\".concat(CLASS_PREFIX, \"-\").concat(attachment));\n    }\n  }, {\n    key: \"getTipElement\",\n    value: function getTipElement() {\n      if (!this.$tip) {\n        // Try and compile user supplied template, or fallback to default template\n        this.$tip = this.compileTemplate(this.$config.template) || this.compileTemplate(this.constructor.Default.template);\n      } // Add tab index so tip can be focused, and to allow it to be\n      // set as relatedTarget in focusin/out events\n\n\n      this.$tip.tabIndex = -1;\n      return this.$tip;\n    }\n  }, {\n    key: \"compileTemplate\",\n    value: function compileTemplate(html) {\n      if (!html || !(0, _inspect.isString)(html)) {\n        /* istanbul ignore next */\n        return null;\n      }\n\n      var div = document.createElement('div');\n      div.innerHTML = html.trim();\n      var node = div.firstElementChild ? div.removeChild(div.firstElementChild) : null;\n      div = null;\n      return node;\n    } // NOTE: Overridden by PopOver class\n\n  }, {\n    key: \"setContent\",\n    value: function setContent(tip) {\n      this.setElementContent((0, _dom.select)(Selector.TOOLTIP_INNER, tip), this.getTitle());\n      (0, _dom.removeClass)(tip, ClassName.FADE);\n      (0, _dom.removeClass)(tip, ClassName.SHOW);\n    }\n  }, {\n    key: \"setElementContent\",\n    value: function setElementContent(container, content) {\n      if (!container) {\n        // If container element doesn't exist, just return\n\n        /* istanbul ignore next */\n        return;\n      }\n\n      var allowHtml = this.$config.html;\n\n      if ((0, _inspect.isObject)(content) && content.nodeType) {\n        // Content is a DOM node\n        if (allowHtml) {\n          if (content.parentElement !== container) {\n            container.innerHTML = '';\n            container.appendChild(content);\n          }\n        } else {\n          /* istanbul ignore next */\n          container.innerText = content.innerText;\n        }\n      } else {\n        // We have a plain HTML string or Text\n        container[allowHtml ? 'innerHTML' : 'innerText'] = content;\n      }\n    } // NOTE: Overridden by PopOver class\n\n  }, {\n    key: \"getTitle\",\n    value: function getTitle() {\n      var title = this.$config.title || '';\n\n      if ((0, _inspect.isFunction)(title)) {\n        // Call the function to get the title value\n\n        /* istanbul ignore next */\n        title = title(this.$element);\n      }\n\n      if ((0, _inspect.isObject)(title) && title.nodeType && !title.innerHTML.trim()) {\n        // We have a DOM node, but without inner content,\n        // so just return empty string\n\n        /* istanbul ignore next */\n        title = '';\n      }\n\n      if ((0, _inspect.isString)(title)) {\n        title = title.trim();\n      }\n\n      if (!title) {\n        // If an explicit title is not given, try element's title attributes\n        title = (0, _dom.getAttr)(this.$element, 'title') || (0, _dom.getAttr)(this.$element, 'data-original-title') || '';\n        title = title.trim();\n      }\n\n      return title;\n    }\n  }, {\n    key: \"listen\",\n    value: function listen() {\n      var _this6 = this;\n\n      var triggers = this.$config.trigger.trim().split(/\\s+/);\n      var el = this.$element; // Listen for global show/hide events\n\n      this.setRootListener(true); // Using 'this' as the handler will get automatically directed to\n      // this.handleEvent and maintain our binding to 'this'\n\n      triggers.forEach(function (trigger) {\n        if (trigger === 'click') {\n          (0, _dom.eventOn)(el, 'click', _this6, EvtOpts);\n        } else if (trigger === 'focus') {\n          (0, _dom.eventOn)(el, 'focusin', _this6, EvtOpts);\n          (0, _dom.eventOn)(el, 'focusout', _this6, EvtOpts);\n        } else if (trigger === 'blur') {\n          // Used to close $tip when element looses focus\n          (0, _dom.eventOn)(el, 'focusout', _this6, EvtOpts);\n        } else if (trigger === 'hover') {\n          (0, _dom.eventOn)(el, 'mouseenter', _this6, EvtOpts);\n          (0, _dom.eventOn)(el, 'mouseleave', _this6, EvtOpts);\n        }\n      }, this);\n    }\n  }, {\n    key: \"unListen\",\n    value: function unListen() {\n      var _this7 = this;\n\n      var events = ['click', 'focusin', 'focusout', 'mouseenter', 'mouseleave']; // Using \"this\" as the handler will get automatically directed to this.handleEvent\n\n      events.forEach(function (evt) {\n        (0, _dom.eventOff)(_this7.$element, evt, _this7, EvtOpts);\n      }, this); // Stop listening for global show/hide/enable/disable events\n\n      this.setRootListener(false);\n    }\n  }, {\n    key: \"handleEvent\",\n    value: function handleEvent(e) {\n      // This special method allows us to use \"this\" as the event handlers\n      if ((0, _dom.isDisabled)(this.$element)) {\n        // If disabled, don't do anything. Note: If tip is shown before element gets\n        // disabled, then tip not close until no longer disabled or forcefully closed.\n\n        /* istanbul ignore next */\n        return;\n      }\n\n      if (!this.$isEnabled) {\n        // If not enable\n        return;\n      }\n\n      var type = e.type;\n      var target = e.target;\n      var relatedTarget = e.relatedTarget;\n      var $element = this.$element;\n      var $tip = this.$tip;\n\n      if (type === 'click') {\n        this.toggle(e);\n      } else if (type === 'focusin' || type === 'mouseenter') {\n        this.enter(e);\n      } else if (type === 'focusout') {\n        // target is the element which is loosing focus\n        // and relatedTarget is the element gaining focus\n        if ($tip && $element && $element.contains(target) && $tip.contains(relatedTarget)) {\n          // If focus moves from $element to $tip, don't trigger a leave\n\n          /* istanbul ignore next */\n          return;\n        }\n\n        if ($tip && $element && $tip.contains(target) && $element.contains(relatedTarget)) {\n          // If focus moves from $tip to $element, don't trigger a leave\n\n          /* istanbul ignore next */\n          return;\n        }\n        /* istanbul ignore next: difficult to test */\n\n\n        if ($tip && $tip.contains(target) && $tip.contains(relatedTarget)) {\n          // If focus moves within $tip, don't trigger a leave\n          return;\n        }\n        /* istanbul ignore next: difficult to test */\n\n\n        if ($element && $element.contains(target) && $element.contains(relatedTarget)) {\n          // If focus moves within $element, don't trigger a leave\n          return;\n        } // Otherwise trigger a leave\n\n\n        this.leave(e);\n      } else if (type === 'mouseleave') {\n        this.leave(e);\n      }\n    }\n    /* istanbul ignore next */\n\n  }, {\n    key: \"setRouteWatcher\",\n    value: function setRouteWatcher(on) {\n      var _this8 = this;\n\n      if (on) {\n        this.setRouteWatcher(false);\n\n        if (this.$root && Boolean(this.$root.$route)) {\n          this.$routeWatcher = this.$root.$watch('$route', function (newVal, oldVal) {\n            if (newVal === oldVal) {\n              return;\n            } // If route has changed, we force hide the tooltip/popover\n\n\n            _this8.forceHide();\n          });\n        }\n      } else {\n        if (this.$routeWatcher) {\n          // Cancel the route watcher by calling the stored reference\n          this.$routeWatcher();\n          this.$routeWatcher = null;\n        }\n      }\n    }\n    /* istanbul ignore next */\n\n  }, {\n    key: \"setModalListener\",\n    value: function setModalListener(on) {\n      var modal = (0, _dom.closest)(MODAL_CLASS, this.$element);\n\n      if (!modal) {\n        // If we are not in a modal, don't worry. be happy\n        return;\n      } // We can listen for modal hidden events on $root\n\n\n      if (this.$root) {\n        this.$root[on ? '$on' : '$off'](MODAL_CLOSE_EVENT, this.$forceHide);\n      }\n    }\n  }, {\n    key: \"setRootListener\",\n    value: function setRootListener(on) {\n      // Listen for global 'bv::{hide|show}::{tooltip|popover}' hide request event\n      if (this.$root) {\n        this.$root[on ? '$on' : '$off'](\"bv::hide::\".concat(this.constructor.NAME), this.$doHide);\n        this.$root[on ? '$on' : '$off'](\"bv::show::\".concat(this.constructor.NAME), this.$doShow);\n        this.$root[on ? '$on' : '$off'](\"bv::disable::\".concat(this.constructor.NAME), this.$doDisable);\n        this.$root[on ? '$on' : '$off'](\"bv::enable::\".concat(this.constructor.NAME), this.$doEnable);\n      }\n    }\n  }, {\n    key: \"doHide\",\n    value: function doHide(id) {\n      // Programmatically hide tooltip or popover\n      if (!id) {\n        // Close all tooltips or popovers\n        this.forceHide();\n      } else if (this.$element && this.$element.id && this.$element.id === id) {\n        // Close this specific tooltip or popover\n        this.hide();\n      }\n    }\n  }, {\n    key: \"doShow\",\n    value: function doShow(id) {\n      // Programmatically show tooltip or popover\n      if (!id) {\n        // Open all tooltips or popovers\n        this.show();\n      } else if (id && this.$element && this.$element.id && this.$element.id === id) {\n        // Show this specific tooltip or popover\n        this.show();\n      }\n    }\n  }, {\n    key: \"doDisable\",\n    value: function doDisable(id) {\n      // Programmatically disable tooltip or popover\n      if (!id) {\n        // Disable all tooltips or popovers\n        this.disable();\n      } else if (this.$element && this.$element.id && this.$element.id === id) {\n        // Disable this specific tooltip or popover\n        this.disable();\n      }\n    }\n  }, {\n    key: \"doEnable\",\n    value: function doEnable(id) {\n      // Programmatically enable tooltip or popover\n      if (!id) {\n        // Enable all tooltips or popovers\n        this.enable();\n      } else if (this.$element && this.$element.id && this.$element.id === id) {\n        // Enable this specific tooltip or popover\n        this.enable();\n      }\n    }\n  }, {\n    key: \"setOnTouchStartListener\",\n    value: function setOnTouchStartListener(on) {\n      var _this9 = this;\n\n      // If this is a touch-enabled device we add extra\n      // empty mouseover listeners to the body's immediate children\n      // Only needed because of broken event delegation on iOS\n      // https://www.quirksmode.org/blog/archives/2014/02/mouse_event_bub.html\n      if ('ontouchstart' in document.documentElement) {\n        /* istanbul ignore next: JSDOM does not support 'ontouchstart' event */\n        (0, _array.from)(document.body.children).forEach(function (el) {\n          if (on) {\n            (0, _dom.eventOn)(el, 'mouseover', _this9._noop);\n          } else {\n            (0, _dom.eventOff)(el, 'mouseover', _this9._noop);\n          }\n        });\n      }\n    }\n  }, {\n    key: \"fixTitle\",\n    value: function fixTitle() {\n      var el = this.$element;\n\n      if ((0, _dom.getAttr)(el, 'title') || !(0, _inspect.isString)((0, _dom.getAttr)(el, 'data-original-title'))) {\n        (0, _dom.setAttr)(el, 'data-original-title', (0, _dom.getAttr)(el, 'title') || '');\n        (0, _dom.setAttr)(el, 'title', '');\n      }\n    } // Enter handler\n\n  }, {\n    key: \"enter\",\n    value: function enter(e) {\n      var _this10 = this;\n\n      if (e) {\n        this.$activeTrigger[e.type === 'focusin' ? 'focus' : 'hover'] = true;\n      }\n\n      if ((0, _dom.hasClass)(this.getTipElement(), ClassName.SHOW) || this.$hoverState === HoverState.SHOW) {\n        this.$hoverState = HoverState.SHOW;\n        return;\n      }\n\n      clearTimeout(this.$hoverTimeout);\n      this.$hoverState = HoverState.SHOW;\n\n      if (!this.$config.delay || !this.$config.delay.show) {\n        this.show();\n        return;\n      }\n\n      this.$hoverTimeout = setTimeout(function () {\n        if (_this10.$hoverState === HoverState.SHOW) {\n          _this10.show();\n        }\n      }, this.$config.delay.show);\n    } // Leave handler\n\n  }, {\n    key: \"leave\",\n    value: function leave(e) {\n      var _this11 = this;\n\n      if (e) {\n        this.$activeTrigger[e.type === 'focusout' ? 'focus' : 'hover'] = false;\n\n        if (e.type === 'focusout' && /blur/.test(this.$config.trigger)) {\n          // Special case for `blur`: we clear out the other triggers\n          this.$activeTrigger.click = false;\n          this.$activeTrigger.hover = false;\n        }\n      }\n\n      if (this.isWithActiveTrigger()) {\n        return;\n      }\n\n      clearTimeout(this.$hoverTimeout);\n      this.$hoverState = HoverState.OUT;\n\n      if (!this.$config.delay || !this.$config.delay.hide) {\n        this.hide();\n        return;\n      }\n\n      this.$hoverTimeout = setTimeout(function () {\n        if (_this11.$hoverState === HoverState.OUT) {\n          _this11.hide();\n        }\n      }, this.$config.delay.hide);\n    }\n  }, {\n    key: \"getPopperConfig\",\n    value: function getPopperConfig(placement, tip) {\n      var _this12 = this;\n\n      return {\n        placement: this.constructor.getAttachment(placement),\n        modifiers: {\n          offset: {\n            offset: this.getOffset(placement, tip)\n          },\n          flip: {\n            behavior: this.$config.fallbackPlacement\n          },\n          arrow: {\n            element: '.arrow'\n          },\n          preventOverflow: {\n            padding: this.$config.boundaryPadding,\n            boundariesElement: this.$config.boundary\n          }\n        },\n        onCreate: function onCreate(data) {\n          // Handle flipping arrow classes\n\n          /* istanbul ignore next */\n          if (data.originalPlacement !== data.placement) {\n            _this12.handlePopperPlacementChange(data);\n          }\n        },\n        onUpdate: function onUpdate(data) {\n          // Handle flipping arrow classes\n\n          /* istanbul ignore next */\n          _this12.handlePopperPlacementChange(data);\n        }\n      };\n    }\n    /* istanbul ignore next */\n\n  }, {\n    key: \"getOffset\",\n    value: function getOffset(placement, tip) {\n      if (!this.$config.offset) {\n        var arrow = (0, _dom.select)(Selector.ARROW, tip);\n        var arrowOffset = parseFloat((0, _dom.getCS)(arrow).width) + parseFloat(this.$config.arrowPadding);\n\n        switch (OffsetMap[placement.toUpperCase()]) {\n          case +1:\n            return \"+50%p - \".concat(arrowOffset, \"px\");\n\n          case -1:\n            return \"-50%p + \".concat(arrowOffset, \"px\");\n\n          default:\n            return 0;\n        }\n      }\n\n      return this.$config.offset;\n    }\n  }, {\n    key: \"getPlacement\",\n    value: function getPlacement() {\n      var placement = this.$config.placement;\n\n      if ((0, _inspect.isFunction)(placement)) {\n        /* istanbul ignore next */\n        return placement.call(this, this.$tip, this.$element);\n      }\n\n      return placement;\n    }\n  }, {\n    key: \"isWithActiveTrigger\",\n    value: function isWithActiveTrigger() {\n      for (var trigger in this.$activeTrigger) {\n        if (this.$activeTrigger[trigger]) {\n          return true;\n        }\n      }\n\n      return false;\n    } // NOTE: Overridden by PopOver class\n\n    /* istanbul ignore next */\n\n  }, {\n    key: \"cleanTipClass\",\n    value: function cleanTipClass() {\n      var tip = this.getTipElement();\n      var tabClass = tip.className.match(BS_CLASS_PREFIX_REGEX);\n\n      if (!(0, _inspect.isNull)(tabClass) && tabClass.length > 0) {\n        tabClass.forEach(function (cls) {\n          (0, _dom.removeClass)(tip, cls);\n        });\n      }\n    }\n    /* istanbul ignore next */\n\n  }, {\n    key: \"handlePopperPlacementChange\",\n    value: function handlePopperPlacementChange(data) {\n      this.cleanTipClass();\n      this.addAttachmentClass(this.constructor.getAttachment(data.placement));\n    }\n    /* istanbul ignore next */\n\n  }, {\n    key: \"fixTransition\",\n    value: function fixTransition(tip) {\n      var initConfigAnimation = this.$config.animation || false;\n\n      if (!(0, _inspect.isNull)((0, _dom.getAttr)(tip, 'x-placement'))) {\n        return;\n      }\n\n      (0, _dom.removeClass)(tip, ClassName.FADE);\n      this.$config.animation = false;\n      this.hide();\n      this.show();\n      this.$config.animation = initConfigAnimation;\n    }\n  }], [{\n    key: \"getAttachment\",\n    value: function getAttachment(placement) {\n      return AttachmentMap[placement.toUpperCase()];\n    }\n  }, {\n    key: \"Default\",\n    get: function get() {\n      return Defaults;\n    } // NOTE: Overridden by PopOver class\n\n  }, {\n    key: \"NAME\",\n    get: function get() {\n      return NAME;\n    }\n  }]);\n\n  return ToolTip;\n}();\n\nvar _default = ToolTip;\nexports.default = _default;","\"use strict\";\n\nexports.__esModule = true;\nexports.default = exports.VBPopover = void 0;\n\nvar _popper = _interopRequireDefault(require(\"popper.js\"));\n\nvar _popover = _interopRequireDefault(require(\"../../utils/popover.class\"));\n\nvar _warn = _interopRequireDefault(require(\"../../utils/warn\"));\n\nvar _config = require(\"../../utils/config\");\n\nvar _env = require(\"../../utils/env\");\n\nvar _inspect = require(\"../../utils/inspect\");\n\nvar _object = require(\"../../utils/object\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// Key which we use to store tooltip object on element\nvar BV_POPOVER = '__BV_PopOver__'; // Valid event triggers\n\nvar validTriggers = {\n  focus: true,\n  hover: true,\n  click: true,\n  blur: true // Build a PopOver config based on bindings (if any)\n  // Arguments and modifiers take precedence over passed value config object\n\n  /* istanbul ignore next: not easy to test */\n\n};\n\nvar parseBindings = function parseBindings(bindings)\n/* istanbul ignore next: not easy to test */\n{\n  // We start out with a basic config\n  var NAME = 'BPopover';\n  var config = {\n    delay: (0, _config.getComponentConfig)(NAME, 'delay'),\n    boundary: String((0, _config.getComponentConfig)(NAME, 'boundary')),\n    boundaryPadding: parseInt((0, _config.getComponentConfig)(NAME, 'boundaryPadding'), 10) || 0 // Process bindings.value\n\n  };\n\n  if ((0, _inspect.isString)(bindings.value)) {\n    // Value is popover content (html optionally supported)\n    config.content = bindings.value;\n  } else if ((0, _inspect.isFunction)(bindings.value)) {\n    // Content generator function\n    config.content = bindings.value;\n  } else if ((0, _inspect.isObject)(bindings.value)) {\n    // Value is config object, so merge\n    config = _objectSpread({}, config, bindings.value);\n  } // If argument, assume element ID of container element\n\n\n  if (bindings.arg) {\n    // Element ID specified as arg\n    // We must prepend '#' to become a CSS selector\n    config.container = \"#\".concat(bindings.arg);\n  } // Process modifiers\n\n\n  (0, _object.keys)(bindings.modifiers).forEach(function (mod) {\n    if (/^html$/.test(mod)) {\n      // Title allows HTML\n      config.html = true;\n    } else if (/^nofade$/.test(mod)) {\n      // no animation\n      config.animation = false;\n    } else if (/^(auto|top(left|right)?|bottom(left|right)?|left(top|bottom)?|right(top|bottom)?)$/.test(mod)) {\n      // placement of popover\n      config.placement = mod;\n    } else if (/^(window|viewport|scrollParent)$/.test(mod)) {\n      // Boundary of popover\n      config.boundary = mod;\n    } else if (/^d\\d+$/.test(mod)) {\n      // Delay value\n      var delay = parseInt(mod.slice(1), 10) || 0;\n\n      if (delay) {\n        config.delay = delay;\n      }\n    } else if (/^o-?\\d+$/.test(mod)) {\n      // Offset value (negative allowed)\n      var offset = parseInt(mod.slice(1), 10) || 0;\n\n      if (offset) {\n        config.offset = offset;\n      }\n    }\n  }); // Special handling of event trigger modifiers trigger is\n  // a space separated list\n\n  var selectedTriggers = {}; // Parse current config object trigger\n\n  var triggers = (0, _inspect.isString)(config.trigger) ? config.trigger.trim().split(/\\s+/) : [];\n  triggers.forEach(function (trigger) {\n    if (validTriggers[trigger]) {\n      selectedTriggers[trigger] = true;\n    }\n  }); // Parse modifiers for triggers\n\n  (0, _object.keys)(validTriggers).forEach(function (trigger) {\n    if (bindings.modifiers[trigger]) {\n      selectedTriggers[trigger] = true;\n    }\n  }); // Sanitize triggers\n\n  config.trigger = (0, _object.keys)(selectedTriggers).join(' ');\n\n  if (config.trigger === 'blur') {\n    // Blur by itself is useless, so convert it to focus\n    config.trigger = 'focus';\n  }\n\n  if (!config.trigger) {\n    // Remove trigger config\n    delete config.trigger;\n  }\n\n  return config;\n}; // Add or update PopOver on our element\n\n\nvar applyPopover = function applyPopover(el, bindings, vnode) {\n  if (!_env.isBrowser) {\n    /* istanbul ignore next */\n    return;\n  } // Popper is required for PopOvers to work\n\n\n  if (!_popper.default) {\n    /* istanbul ignore next */\n    (0, _warn.default)('v-b-popover: Popper.js is required for PopOvers to work');\n    /* istanbul ignore next */\n\n    return;\n  }\n\n  var config = parseBindings(bindings);\n\n  if (el[BV_POPOVER]) {\n    el[BV_POPOVER].updateConfig(config);\n  } else {\n    el[BV_POPOVER] = new _popover.default(el, config, vnode.context.$root);\n  }\n}; // Remove PopOver on our element\n\n\nvar removePopover = function removePopover(el) {\n  if (el[BV_POPOVER]) {\n    el[BV_POPOVER].destroy();\n    el[BV_POPOVER] = null;\n    delete el[BV_POPOVER];\n  }\n};\n/*\n * Export our directive\n */\n\n\nvar VBPopover = {\n  bind: function bind(el, bindings, vnode) {\n    applyPopover(el, bindings, vnode);\n  },\n  inserted: function inserted(el, bindings, vnode) {\n    applyPopover(el, bindings, vnode);\n  },\n  update: function update(el, bindings, vnode)\n  /* istanbul ignore next: not easy to test */\n  {\n    if (bindings.value !== bindings.oldValue) {\n      applyPopover(el, bindings, vnode);\n    }\n  },\n  componentUpdated: function componentUpdated(el, bindings, vnode)\n  /* istanbul ignore next: not easy to test */\n  {\n    if (bindings.value !== bindings.oldValue) {\n      applyPopover(el, bindings, vnode);\n    }\n  },\n  unbind: function unbind(el) {\n    removePopover(el);\n  }\n};\nexports.VBPopover = VBPopover;\nvar _default = VBPopover;\nexports.default = _default;","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-lg-6\"},[_c('small',{staticClass:\"d-block text-uppercase font-weight-bold mb-3\"},[_vm._v(\"Tooltips\")]),_c('base-button',{directives:[{name:\"b-tooltip\",rawName:\"v-b-tooltip.hover.left\",modifiers:{\"hover\":true,\"left\":true}}],staticClass:\"btn-tooltip\",attrs:{\"size\":\"sm\",\"type\":\"primary\",\"title\":\"Tooltip on left\"}},[_vm._v(\"On left\\n        \")]),_c('base-button',{directives:[{name:\"b-tooltip\",rawName:\"v-b-tooltip.hover.top\",modifiers:{\"hover\":true,\"top\":true}}],staticClass:\"btn-tooltip\",attrs:{\"size\":\"sm\",\"type\":\"primary\",\"title\":\"Tooltip on top\"}},[_vm._v(\"On top\\n        \")]),_c('base-button',{directives:[{name:\"b-tooltip\",rawName:\"v-b-tooltip.hover.bottom\",modifiers:{\"hover\":true,\"bottom\":true}}],staticClass:\"btn-tooltip\",attrs:{\"size\":\"sm\",\"type\":\"primary\",\"title\":\"Tooltip on bottom\"}},[_vm._v(\"On bottom\\n        \")]),_c('base-button',{directives:[{name:\"b-tooltip\",rawName:\"v-b-tooltip.hover.right\",modifiers:{\"hover\":true,\"right\":true}}],staticClass:\"btn-tooltip\",attrs:{\"size\":\"sm\",\"type\":\"primary\",\"title\":\"Tooltip on right\"}},[_vm._v(\"On right\\n        \")])],1),_c('div',{staticClass:\"col-lg-6 mt-4 mt-lg-0\"},[_c('small',{staticClass:\"d-block text-uppercase font-weight-bold mb-3\"},[_vm._v(\"Popovers\")]),_c('base-button',{directives:[{name:\"b-popover\",rawName:\"v-b-popover.hover.left\",value:('Vivamus sagittis lacus vel augue laoreet rutrum faucibus.'),expression:\"'Vivamus sagittis lacus vel augue laoreet rutrum faucibus.'\",modifiers:{\"hover\":true,\"left\":true}}],attrs:{\"size\":\"sm\",\"type\":\"default\",\"title\":\"Popover On Left\"}},[_vm._v(\"On left\\n        \")]),_c('base-button',{directives:[{name:\"b-popover\",rawName:\"v-b-popover.hover.left\",value:('Vivamus sagittis lacus vel augue laoreet rutrum faucibus.'),expression:\"'Vivamus sagittis lacus vel augue laoreet rutrum faucibus.'\",modifiers:{\"hover\":true,\"left\":true}}],attrs:{\"size\":\"sm\",\"type\":\"default\",\"title\":\"Popover On Left\"}},[_vm._v(\"On left\\n        \")]),_c('base-button',{directives:[{name:\"b-popover\",rawName:\"v-b-popover.hover.top\",value:('Vivamus sagittis lacus vel augue laoreet rutrum faucibus.'),expression:\"'Vivamus sagittis lacus vel augue laoreet rutrum faucibus.'\",modifiers:{\"hover\":true,\"top\":true}}],attrs:{\"size\":\"sm\",\"type\":\"default\",\"title\":\"Popover On Top\"}},[_vm._v(\"On top\\n        \")]),_c('base-button',{directives:[{name:\"b-popover\",rawName:\"v-b-popover.hover.right\",value:('Vivamus sagittis lacus vel augue laoreet rutrum faucibus.'),expression:\"'Vivamus sagittis lacus vel augue laoreet rutrum faucibus.'\",modifiers:{\"hover\":true,\"right\":true}}],attrs:{\"size\":\"sm\",\"type\":\"default\",\"title\":\"Popover On right\"}},[_vm._v(\"On right\\n        \")]),_c('base-button',{directives:[{name:\"b-popover\",rawName:\"v-b-popover.hover.bottom\",value:('Vivamus sagittis lacus vel augue laoreet rutrum faucibus.'),expression:\"'Vivamus sagittis lacus vel augue laoreet rutrum faucibus.'\",modifiers:{\"hover\":true,\"bottom\":true}}],attrs:{\"size\":\"sm\",\"type\":\"default\",\"title\":\"Popover On bottom\"}},[_vm._v(\"On bottom\\n        \")])],1)])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n    <div class=\"row\">\n        <div class=\"col-lg-6\">\n            <small class=\"d-block text-uppercase font-weight-bold mb-3\">Tooltips</small>\n            <base-button size=\"sm\" type=\"primary\" class=\"btn-tooltip\"\n                         v-b-tooltip.hover.left title=\"Tooltip on left\">On left\n            </base-button>\n            <base-button size=\"sm\" type=\"primary\" class=\"btn-tooltip\"\n                         v-b-tooltip.hover.top title=\"Tooltip on top\">On top\n            </base-button>\n            <base-button size=\"sm\" type=\"primary\" class=\"btn-tooltip\"\n                         v-b-tooltip.hover.bottom title=\"Tooltip on bottom\">On bottom\n            </base-button>\n            <base-button size=\"sm\" type=\"primary\" class=\"btn-tooltip\"\n                         v-b-tooltip.hover.right title=\"Tooltip on right\">On right\n            </base-button>\n        </div>\n        <div class=\"col-lg-6 mt-4 mt-lg-0\">\n            <small class=\"d-block text-uppercase font-weight-bold mb-3\">Popovers</small>\n            <base-button size=\"sm\" type=\"default\"\n                         v-b-popover.hover.left=\"'Vivamus sagittis lacus vel augue laoreet rutrum faucibus.'\"\n                         title=\"Popover On Left\">On left\n            </base-button>\n\n            <base-button size=\"sm\" type=\"default\"\n                         v-b-popover.hover.left=\"'Vivamus sagittis lacus vel augue laoreet rutrum faucibus.'\"\n                         title=\"Popover On Left\">On left\n            </base-button>\n\n            <base-button size=\"sm\" type=\"default\"\n                         v-b-popover.hover.top=\"'Vivamus sagittis lacus vel augue laoreet rutrum faucibus.'\"\n                         title=\"Popover On Top\">On top\n            </base-button>\n            <base-button size=\"sm\" type=\"default\"\n                         v-b-popover.hover.right=\"'Vivamus sagittis lacus vel augue laoreet rutrum faucibus.'\"\n                         title=\"Popover On right\">On right\n            </base-button>\n            <base-button size=\"sm\" type=\"default\"\n                         v-b-popover.hover.bottom=\"'Vivamus sagittis lacus vel augue laoreet rutrum faucibus.'\"\n                         title=\"Popover On bottom\">On bottom\n            </base-button>\n        </div>\n    </div>\n</template>\n<script>\nimport BTooltip from \"bootstrap-vue/es/directives/tooltip/tooltip\";\nimport BPopover from \"bootstrap-vue/es/directives/popover/popover\";\n\nexport default {\n  directives: {\n    BTooltip,\n    BPopover\n  }\n};\n</script>\n","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Tooltips.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Tooltips.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Tooltips.vue?vue&type=template&id=bb3114be&\"\nimport script from \"./Tooltips.vue?vue&type=script&lang=js&\"\nexport * from \"./Tooltips.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","\"use strict\";\n\nexports.__esModule = true;\nexports.default = exports.VBTooltip = void 0;\n\nvar _popper = _interopRequireDefault(require(\"popper.js\"));\n\nvar _tooltip = _interopRequireDefault(require(\"../../utils/tooltip.class\"));\n\nvar _warn = _interopRequireDefault(require(\"../../utils/warn\"));\n\nvar _config = require(\"../../utils/config\");\n\nvar _env = require(\"../../utils/env\");\n\nvar _inspect = require(\"../../utils/inspect\");\n\nvar _object = require(\"../../utils/object\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// Key which we use to store tooltip object on element\nvar BV_TOOLTIP = '__BV_ToolTip__'; // Valid event triggers\n\nvar validTriggers = {\n  focus: true,\n  hover: true,\n  click: true,\n  blur: true // Build a ToolTip config based on bindings (if any)\n  // Arguments and modifiers take precedence over passed value config object\n\n  /* istanbul ignore next: not easy to test */\n\n};\n\nvar parseBindings = function parseBindings(bindings)\n/* istanbul ignore next: not easy to test */\n{\n  // We start out with a basic config\n  var NAME = 'BTooltip';\n  var config = {\n    delay: (0, _config.getComponentConfig)(NAME, 'delay'),\n    boundary: String((0, _config.getComponentConfig)(NAME, 'boundary')),\n    boundaryPadding: parseInt((0, _config.getComponentConfig)(NAME, 'boundaryPadding'), 10) || 0 // Process bindings.value\n\n  };\n\n  if ((0, _inspect.isString)(bindings.value)) {\n    // Value is tooltip content (html optionally supported)\n    config.title = bindings.value;\n  } else if ((0, _inspect.isFunction)(bindings.value)) {\n    // Title generator function\n    config.title = bindings.value;\n  } else if ((0, _inspect.isObject)(bindings.value)) {\n    // Value is config object, so merge\n    config = _objectSpread({}, config, bindings.value);\n  } // If argument, assume element ID of container element\n\n\n  if (bindings.arg) {\n    // Element ID specified as arg\n    // We must prepend '#' to become a CSS selector\n    config.container = \"#\".concat(bindings.arg);\n  } // Process modifiers\n\n\n  (0, _object.keys)(bindings.modifiers).forEach(function (mod) {\n    if (/^html$/.test(mod)) {\n      // Title allows HTML\n      config.html = true;\n    } else if (/^nofade$/.test(mod)) {\n      // No animation\n      config.animation = false;\n    } else if (/^(auto|top(left|right)?|bottom(left|right)?|left(top|bottom)?|right(top|bottom)?)$/.test(mod)) {\n      // Placement of tooltip\n      config.placement = mod;\n    } else if (/^(window|viewport|scrollParent)$/.test(mod)) {\n      // Boundary of tooltip\n      config.boundary = mod;\n    } else if (/^d\\d+$/.test(mod)) {\n      // Delay value\n      var delay = parseInt(mod.slice(1), 10) || 0;\n\n      if (delay) {\n        config.delay = delay;\n      }\n    } else if (/^o-?\\d+$/.test(mod)) {\n      // Offset value, negative allowed\n      var offset = parseInt(mod.slice(1), 10) || 0;\n\n      if (offset) {\n        config.offset = offset;\n      }\n    }\n  }); // Special handling of event trigger modifiers trigger is\n  // a space separated list\n\n  var selectedTriggers = {}; // Parse current config object trigger\n\n  var triggers = (0, _inspect.isString)(config.trigger) ? config.trigger.trim().split(/\\s+/) : [];\n  triggers.forEach(function (trigger) {\n    if (validTriggers[trigger]) {\n      selectedTriggers[trigger] = true;\n    }\n  }); // Parse modifiers for triggers\n\n  (0, _object.keys)(validTriggers).forEach(function (trigger) {\n    if (bindings.modifiers[trigger]) {\n      selectedTriggers[trigger] = true;\n    }\n  }); // Sanitize triggers\n\n  config.trigger = (0, _object.keys)(selectedTriggers).join(' ');\n\n  if (config.trigger === 'blur') {\n    // Blur by itself is useless, so convert it to 'focus'\n    config.trigger = 'focus';\n  }\n\n  if (!config.trigger) {\n    // Remove trigger config\n    delete config.trigger;\n  }\n\n  return config;\n}; // Add or update ToolTip on our element\n\n\nvar applyTooltip = function applyTooltip(el, bindings, vnode) {\n  if (!_env.isBrowser) {\n    /* istanbul ignore next */\n    return;\n  }\n\n  if (!_popper.default) {\n    // Popper is required for ToolTips to work\n\n    /* istanbul ignore next */\n    (0, _warn.default)('v-b-tooltip: Popper.js is required for ToolTips to work');\n    /* istanbul ignore next */\n\n    return;\n  }\n\n  var config = parseBindings(bindings);\n\n  if (el[BV_TOOLTIP]) {\n    el[BV_TOOLTIP].updateConfig(config);\n  } else {\n    el[BV_TOOLTIP] = new _tooltip.default(el, config, vnode.context.$root);\n  }\n}; // Remove ToolTip on our element\n\n\nvar removeTooltip = function removeTooltip(el) {\n  if (el[BV_TOOLTIP]) {\n    el[BV_TOOLTIP].destroy();\n    el[BV_TOOLTIP] = null;\n    delete el[BV_TOOLTIP];\n  }\n};\n/*\n * Export our directive\n */\n\n\nvar VBTooltip = {\n  bind: function bind(el, bindings, vnode) {\n    applyTooltip(el, bindings, vnode);\n  },\n  inserted: function inserted(el, bindings, vnode) {\n    applyTooltip(el, bindings, vnode);\n  },\n  update: function update(el, bindings, vnode)\n  /* istanbul ignore next: not easy to test */\n  {\n    if (bindings.value !== bindings.oldValue) {\n      applyTooltip(el, bindings, vnode);\n    }\n  },\n  componentUpdated: function componentUpdated(el, bindings, vnode)\n  /* istanbul ignore next: not easy to test */\n  {\n    if (bindings.value !== bindings.oldValue) {\n      applyTooltip(el, bindings, vnode);\n    }\n  },\n  unbind: function unbind(el) {\n    removeTooltip(el);\n  }\n};\nexports.VBTooltip = VBTooltip;\nvar _default = VBTooltip;\nexports.default = _default;","\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _tooltip = _interopRequireDefault(require(\"./tooltip.class\"));\n\nvar _dom = require(\"./dom\");\n\nvar _inspect = require(\"./inspect\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar NAME = 'popover';\nvar CLASS_PREFIX = 'bs-popover';\nvar BS_CLASS_PREFIX_REGEX = new RegExp(\"\\\\b\".concat(CLASS_PREFIX, \"\\\\S+\"), 'g');\n\nvar Defaults = _objectSpread({}, _tooltip.default.Default, {\n  placement: 'right',\n  trigger: 'click',\n  content: '',\n  template: '<div class=\"popover\" role=\"tooltip\">' + '<div class=\"arrow\"></div>' + '<h3 class=\"popover-header\"></h3>' + '<div class=\"popover-body\"></div></div>'\n});\n\nvar ClassName = {\n  FADE: 'fade',\n  SHOW: 'show'\n};\nvar Selector = {\n  TITLE: '.popover-header',\n  CONTENT: '.popover-body'\n};\n\nvar PopOver =\n/*#__PURE__*/\nfunction (_ToolTip) {\n  _inherits(PopOver, _ToolTip);\n\n  function PopOver() {\n    _classCallCheck(this, PopOver);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(PopOver).apply(this, arguments));\n  }\n\n  _createClass(PopOver, [{\n    key: \"isWithContent\",\n    // --- Method overrides ---\n    value: function isWithContent(tip) {\n      tip = tip || this.$tip;\n\n      if (!tip) {\n        /* istanbul ignore next */\n        return false;\n      }\n\n      var hasTitle = Boolean(((0, _dom.select)(Selector.TITLE, tip) || {}).innerHTML);\n      var hasContent = Boolean(((0, _dom.select)(Selector.CONTENT, tip) || {}).innerHTML);\n      return hasTitle || hasContent;\n    }\n  }, {\n    key: \"addAttachmentClass\",\n    value: function addAttachmentClass(attachment)\n    /* istanbul ignore next */\n    {\n      (0, _dom.addClass)(this.getTipElement(), \"\".concat(CLASS_PREFIX, \"-\").concat(attachment));\n    }\n  }, {\n    key: \"setContent\",\n    value: function setContent(tip) {\n      // we use append for html objects to maintain js events/components\n      this.setElementContent((0, _dom.select)(Selector.TITLE, tip), this.getTitle());\n      this.setElementContent((0, _dom.select)(Selector.CONTENT, tip), this.getContent());\n      (0, _dom.removeClass)(tip, ClassName.FADE);\n      (0, _dom.removeClass)(tip, ClassName.SHOW);\n    } // This method may look identical to ToolTip version, but it uses a different RegEx defined above\n\n  }, {\n    key: \"cleanTipClass\",\n    value: function cleanTipClass()\n    /* istanbul ignore next */\n    {\n      var tip = this.getTipElement();\n      var tabClass = tip.className.match(BS_CLASS_PREFIX_REGEX);\n\n      if (!(0, _inspect.isNull)(tabClass) && tabClass.length > 0) {\n        tabClass.forEach(function (cls) {\n          (0, _dom.removeClass)(tip, cls);\n        });\n      }\n    }\n  }, {\n    key: \"getTitle\",\n    value: function getTitle() {\n      var title = this.$config.title || '';\n      /* istanbul ignore next */\n\n      if ((0, _inspect.isFunction)(title)) {\n        title = title(this.$element);\n      }\n      /* istanbul ignore next */\n\n\n      if ((0, _inspect.isObject)(title) && title.nodeType && !title.innerHTML.trim()) {\n        // We have a dom node, but without inner content, so just return an empty string\n        title = '';\n      }\n\n      if ((0, _inspect.isString)(title)) {\n        title = title.trim();\n      }\n\n      if (!title) {\n        // Try and grab element's title attribute\n        title = (0, _dom.getAttr)(this.$element, 'title') || (0, _dom.getAttr)(this.$element, 'data-original-title') || '';\n        title = title.trim();\n      }\n\n      return title;\n    } // New methods\n\n  }, {\n    key: \"getContent\",\n    value: function getContent() {\n      var content = this.$config.content || '';\n      /* istanbul ignore next */\n\n      if ((0, _inspect.isFunction)(content)) {\n        content = content(this.$element);\n      }\n      /* istanbul ignore next */\n\n\n      if ((0, _inspect.isObject)(content) && content.nodeType && !content.innerHTML.trim()) {\n        // We have a dom node, but without inner content, so just return an empty string\n        content = '';\n      }\n\n      if ((0, _inspect.isString)(content)) {\n        content = content.trim();\n      }\n\n      return content;\n    }\n  }], [{\n    key: \"Default\",\n    // --- Getter overrides ---\n    get: function get() {\n      return Defaults;\n    }\n  }, {\n    key: \"NAME\",\n    get: function get() {\n      return NAME;\n    }\n  }]);\n\n  return PopOver;\n}(_tooltip.default);\n\nvar _default = PopOver;\nexports.default = _default;","/**!\n * @fileOverview Kickass library to create and place poppers near their reference elements.\n * @version 1.15.0\n * @license\n * Copyright (c) 2016 Federico Zivolo and contributors\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\nvar isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined';\n\nvar longerTimeoutBrowsers = ['Edge', 'Trident', 'Firefox'];\nvar timeoutDuration = 0;\nfor (var i = 0; i < longerTimeoutBrowsers.length; i += 1) {\n  if (isBrowser && navigator.userAgent.indexOf(longerTimeoutBrowsers[i]) >= 0) {\n    timeoutDuration = 1;\n    break;\n  }\n}\n\nfunction microtaskDebounce(fn) {\n  var called = false;\n  return function () {\n    if (called) {\n      return;\n    }\n    called = true;\n    window.Promise.resolve().then(function () {\n      called = false;\n      fn();\n    });\n  };\n}\n\nfunction taskDebounce(fn) {\n  var scheduled = false;\n  return function () {\n    if (!scheduled) {\n      scheduled = true;\n      setTimeout(function () {\n        scheduled = false;\n        fn();\n      }, timeoutDuration);\n    }\n  };\n}\n\nvar supportsMicroTasks = isBrowser && window.Promise;\n\n/**\n* Create a debounced version of a method, that's asynchronously deferred\n* but called in the minimum time possible.\n*\n* @method\n* @memberof Popper.Utils\n* @argument {Function} fn\n* @returns {Function}\n*/\nvar debounce = supportsMicroTasks ? microtaskDebounce : taskDebounce;\n\n/**\n * Check if the given variable is a function\n * @method\n * @memberof Popper.Utils\n * @argument {Any} functionToCheck - variable to check\n * @returns {Boolean} answer to: is a function?\n */\nfunction isFunction(functionToCheck) {\n  var getType = {};\n  return functionToCheck && getType.toString.call(functionToCheck) === '[object Function]';\n}\n\n/**\n * Get CSS computed property of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Eement} element\n * @argument {String} property\n */\nfunction getStyleComputedProperty(element, property) {\n  if (element.nodeType !== 1) {\n    return [];\n  }\n  // NOTE: 1 DOM access here\n  var window = element.ownerDocument.defaultView;\n  var css = window.getComputedStyle(element, null);\n  return property ? css[property] : css;\n}\n\n/**\n * Returns the parentNode or the host of the element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} parent\n */\nfunction getParentNode(element) {\n  if (element.nodeName === 'HTML') {\n    return element;\n  }\n  return element.parentNode || element.host;\n}\n\n/**\n * Returns the scrolling parent of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} scroll parent\n */\nfunction getScrollParent(element) {\n  // Return body, `getScroll` will take care to get the correct `scrollTop` from it\n  if (!element) {\n    return document.body;\n  }\n\n  switch (element.nodeName) {\n    case 'HTML':\n    case 'BODY':\n      return element.ownerDocument.body;\n    case '#document':\n      return element.body;\n  }\n\n  // Firefox want us to check `-x` and `-y` variations as well\n\n  var _getStyleComputedProp = getStyleComputedProperty(element),\n      overflow = _getStyleComputedProp.overflow,\n      overflowX = _getStyleComputedProp.overflowX,\n      overflowY = _getStyleComputedProp.overflowY;\n\n  if (/(auto|scroll|overlay)/.test(overflow + overflowY + overflowX)) {\n    return element;\n  }\n\n  return getScrollParent(getParentNode(element));\n}\n\nvar isIE11 = isBrowser && !!(window.MSInputMethodContext && document.documentMode);\nvar isIE10 = isBrowser && /MSIE 10/.test(navigator.userAgent);\n\n/**\n * Determines if the browser is Internet Explorer\n * @method\n * @memberof Popper.Utils\n * @param {Number} version to check\n * @returns {Boolean} isIE\n */\nfunction isIE(version) {\n  if (version === 11) {\n    return isIE11;\n  }\n  if (version === 10) {\n    return isIE10;\n  }\n  return isIE11 || isIE10;\n}\n\n/**\n * Returns the offset parent of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} offset parent\n */\nfunction getOffsetParent(element) {\n  if (!element) {\n    return document.documentElement;\n  }\n\n  var noOffsetParent = isIE(10) ? document.body : null;\n\n  // NOTE: 1 DOM access here\n  var offsetParent = element.offsetParent || null;\n  // Skip hidden elements which don't have an offsetParent\n  while (offsetParent === noOffsetParent && element.nextElementSibling) {\n    offsetParent = (element = element.nextElementSibling).offsetParent;\n  }\n\n  var nodeName = offsetParent && offsetParent.nodeName;\n\n  if (!nodeName || nodeName === 'BODY' || nodeName === 'HTML') {\n    return element ? element.ownerDocument.documentElement : document.documentElement;\n  }\n\n  // .offsetParent will return the closest TH, TD or TABLE in case\n  // no offsetParent is present, I hate this job...\n  if (['TH', 'TD', 'TABLE'].indexOf(offsetParent.nodeName) !== -1 && getStyleComputedProperty(offsetParent, 'position') === 'static') {\n    return getOffsetParent(offsetParent);\n  }\n\n  return offsetParent;\n}\n\nfunction isOffsetContainer(element) {\n  var nodeName = element.nodeName;\n\n  if (nodeName === 'BODY') {\n    return false;\n  }\n  return nodeName === 'HTML' || getOffsetParent(element.firstElementChild) === element;\n}\n\n/**\n * Finds the root node (document, shadowDOM root) of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} node\n * @returns {Element} root node\n */\nfunction getRoot(node) {\n  if (node.parentNode !== null) {\n    return getRoot(node.parentNode);\n  }\n\n  return node;\n}\n\n/**\n * Finds the offset parent common to the two provided nodes\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element1\n * @argument {Element} element2\n * @returns {Element} common offset parent\n */\nfunction findCommonOffsetParent(element1, element2) {\n  // This check is needed to avoid errors in case one of the elements isn't defined for any reason\n  if (!element1 || !element1.nodeType || !element2 || !element2.nodeType) {\n    return document.documentElement;\n  }\n\n  // Here we make sure to give as \"start\" the element that comes first in the DOM\n  var order = element1.compareDocumentPosition(element2) & Node.DOCUMENT_POSITION_FOLLOWING;\n  var start = order ? element1 : element2;\n  var end = order ? element2 : element1;\n\n  // Get common ancestor container\n  var range = document.createRange();\n  range.setStart(start, 0);\n  range.setEnd(end, 0);\n  var commonAncestorContainer = range.commonAncestorContainer;\n\n  // Both nodes are inside #document\n\n  if (element1 !== commonAncestorContainer && element2 !== commonAncestorContainer || start.contains(end)) {\n    if (isOffsetContainer(commonAncestorContainer)) {\n      return commonAncestorContainer;\n    }\n\n    return getOffsetParent(commonAncestorContainer);\n  }\n\n  // one of the nodes is inside shadowDOM, find which one\n  var element1root = getRoot(element1);\n  if (element1root.host) {\n    return findCommonOffsetParent(element1root.host, element2);\n  } else {\n    return findCommonOffsetParent(element1, getRoot(element2).host);\n  }\n}\n\n/**\n * Gets the scroll value of the given element in the given side (top and left)\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @argument {String} side `top` or `left`\n * @returns {number} amount of scrolled pixels\n */\nfunction getScroll(element) {\n  var side = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'top';\n\n  var upperSide = side === 'top' ? 'scrollTop' : 'scrollLeft';\n  var nodeName = element.nodeName;\n\n  if (nodeName === 'BODY' || nodeName === 'HTML') {\n    var html = element.ownerDocument.documentElement;\n    var scrollingElement = element.ownerDocument.scrollingElement || html;\n    return scrollingElement[upperSide];\n  }\n\n  return element[upperSide];\n}\n\n/*\n * Sum or subtract the element scroll values (left and top) from a given rect object\n * @method\n * @memberof Popper.Utils\n * @param {Object} rect - Rect object you want to change\n * @param {HTMLElement} element - The element from the function reads the scroll values\n * @param {Boolean} subtract - set to true if you want to subtract the scroll values\n * @return {Object} rect - The modifier rect object\n */\nfunction includeScroll(rect, element) {\n  var subtract = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n  var scrollTop = getScroll(element, 'top');\n  var scrollLeft = getScroll(element, 'left');\n  var modifier = subtract ? -1 : 1;\n  rect.top += scrollTop * modifier;\n  rect.bottom += scrollTop * modifier;\n  rect.left += scrollLeft * modifier;\n  rect.right += scrollLeft * modifier;\n  return rect;\n}\n\n/*\n * Helper to detect borders of a given element\n * @method\n * @memberof Popper.Utils\n * @param {CSSStyleDeclaration} styles\n * Result of `getStyleComputedProperty` on the given element\n * @param {String} axis - `x` or `y`\n * @return {number} borders - The borders size of the given axis\n */\n\nfunction getBordersSize(styles, axis) {\n  var sideA = axis === 'x' ? 'Left' : 'Top';\n  var sideB = sideA === 'Left' ? 'Right' : 'Bottom';\n\n  return parseFloat(styles['border' + sideA + 'Width'], 10) + parseFloat(styles['border' + sideB + 'Width'], 10);\n}\n\nfunction getSize(axis, body, html, computedStyle) {\n  return Math.max(body['offset' + axis], body['scroll' + axis], html['client' + axis], html['offset' + axis], html['scroll' + axis], isIE(10) ? parseInt(html['offset' + axis]) + parseInt(computedStyle['margin' + (axis === 'Height' ? 'Top' : 'Left')]) + parseInt(computedStyle['margin' + (axis === 'Height' ? 'Bottom' : 'Right')]) : 0);\n}\n\nfunction getWindowSizes(document) {\n  var body = document.body;\n  var html = document.documentElement;\n  var computedStyle = isIE(10) && getComputedStyle(html);\n\n  return {\n    height: getSize('Height', body, html, computedStyle),\n    width: getSize('Width', body, html, computedStyle)\n  };\n}\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\n\n\n\n\nvar defineProperty = function (obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n};\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\n/**\n * Given element offsets, generate an output similar to getBoundingClientRect\n * @method\n * @memberof Popper.Utils\n * @argument {Object} offsets\n * @returns {Object} ClientRect like output\n */\nfunction getClientRect(offsets) {\n  return _extends({}, offsets, {\n    right: offsets.left + offsets.width,\n    bottom: offsets.top + offsets.height\n  });\n}\n\n/**\n * Get bounding client rect of given element\n * @method\n * @memberof Popper.Utils\n * @param {HTMLElement} element\n * @return {Object} client rect\n */\nfunction getBoundingClientRect(element) {\n  var rect = {};\n\n  // IE10 10 FIX: Please, don't ask, the element isn't\n  // considered in DOM in some circumstances...\n  // This isn't reproducible in IE10 compatibility mode of IE11\n  try {\n    if (isIE(10)) {\n      rect = element.getBoundingClientRect();\n      var scrollTop = getScroll(element, 'top');\n      var scrollLeft = getScroll(element, 'left');\n      rect.top += scrollTop;\n      rect.left += scrollLeft;\n      rect.bottom += scrollTop;\n      rect.right += scrollLeft;\n    } else {\n      rect = element.getBoundingClientRect();\n    }\n  } catch (e) {}\n\n  var result = {\n    left: rect.left,\n    top: rect.top,\n    width: rect.right - rect.left,\n    height: rect.bottom - rect.top\n  };\n\n  // subtract scrollbar size from sizes\n  var sizes = element.nodeName === 'HTML' ? getWindowSizes(element.ownerDocument) : {};\n  var width = sizes.width || element.clientWidth || result.right - result.left;\n  var height = sizes.height || element.clientHeight || result.bottom - result.top;\n\n  var horizScrollbar = element.offsetWidth - width;\n  var vertScrollbar = element.offsetHeight - height;\n\n  // if an hypothetical scrollbar is detected, we must be sure it's not a `border`\n  // we make this check conditional for performance reasons\n  if (horizScrollbar || vertScrollbar) {\n    var styles = getStyleComputedProperty(element);\n    horizScrollbar -= getBordersSize(styles, 'x');\n    vertScrollbar -= getBordersSize(styles, 'y');\n\n    result.width -= horizScrollbar;\n    result.height -= vertScrollbar;\n  }\n\n  return getClientRect(result);\n}\n\nfunction getOffsetRectRelativeToArbitraryNode(children, parent) {\n  var fixedPosition = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n  var isIE10 = isIE(10);\n  var isHTML = parent.nodeName === 'HTML';\n  var childrenRect = getBoundingClientRect(children);\n  var parentRect = getBoundingClientRect(parent);\n  var scrollParent = getScrollParent(children);\n\n  var styles = getStyleComputedProperty(parent);\n  var borderTopWidth = parseFloat(styles.borderTopWidth, 10);\n  var borderLeftWidth = parseFloat(styles.borderLeftWidth, 10);\n\n  // In cases where the parent is fixed, we must ignore negative scroll in offset calc\n  if (fixedPosition && isHTML) {\n    parentRect.top = Math.max(parentRect.top, 0);\n    parentRect.left = Math.max(parentRect.left, 0);\n  }\n  var offsets = getClientRect({\n    top: childrenRect.top - parentRect.top - borderTopWidth,\n    left: childrenRect.left - parentRect.left - borderLeftWidth,\n    width: childrenRect.width,\n    height: childrenRect.height\n  });\n  offsets.marginTop = 0;\n  offsets.marginLeft = 0;\n\n  // Subtract margins of documentElement in case it's being used as parent\n  // we do this only on HTML because it's the only element that behaves\n  // differently when margins are applied to it. The margins are included in\n  // the box of the documentElement, in the other cases not.\n  if (!isIE10 && isHTML) {\n    var marginTop = parseFloat(styles.marginTop, 10);\n    var marginLeft = parseFloat(styles.marginLeft, 10);\n\n    offsets.top -= borderTopWidth - marginTop;\n    offsets.bottom -= borderTopWidth - marginTop;\n    offsets.left -= borderLeftWidth - marginLeft;\n    offsets.right -= borderLeftWidth - marginLeft;\n\n    // Attach marginTop and marginLeft because in some circumstances we may need them\n    offsets.marginTop = marginTop;\n    offsets.marginLeft = marginLeft;\n  }\n\n  if (isIE10 && !fixedPosition ? parent.contains(scrollParent) : parent === scrollParent && scrollParent.nodeName !== 'BODY') {\n    offsets = includeScroll(offsets, parent);\n  }\n\n  return offsets;\n}\n\nfunction getViewportOffsetRectRelativeToArtbitraryNode(element) {\n  var excludeScroll = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n  var html = element.ownerDocument.documentElement;\n  var relativeOffset = getOffsetRectRelativeToArbitraryNode(element, html);\n  var width = Math.max(html.clientWidth, window.innerWidth || 0);\n  var height = Math.max(html.clientHeight, window.innerHeight || 0);\n\n  var scrollTop = !excludeScroll ? getScroll(html) : 0;\n  var scrollLeft = !excludeScroll ? getScroll(html, 'left') : 0;\n\n  var offset = {\n    top: scrollTop - relativeOffset.top + relativeOffset.marginTop,\n    left: scrollLeft - relativeOffset.left + relativeOffset.marginLeft,\n    width: width,\n    height: height\n  };\n\n  return getClientRect(offset);\n}\n\n/**\n * Check if the given element is fixed or is inside a fixed parent\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @argument {Element} customContainer\n * @returns {Boolean} answer to \"isFixed?\"\n */\nfunction isFixed(element) {\n  var nodeName = element.nodeName;\n  if (nodeName === 'BODY' || nodeName === 'HTML') {\n    return false;\n  }\n  if (getStyleComputedProperty(element, 'position') === 'fixed') {\n    return true;\n  }\n  var parentNode = getParentNode(element);\n  if (!parentNode) {\n    return false;\n  }\n  return isFixed(parentNode);\n}\n\n/**\n * Finds the first parent of an element that has a transformed property defined\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} first transformed parent or documentElement\n */\n\nfunction getFixedPositionOffsetParent(element) {\n  // This check is needed to avoid errors in case one of the elements isn't defined for any reason\n  if (!element || !element.parentElement || isIE()) {\n    return document.documentElement;\n  }\n  var el = element.parentElement;\n  while (el && getStyleComputedProperty(el, 'transform') === 'none') {\n    el = el.parentElement;\n  }\n  return el || document.documentElement;\n}\n\n/**\n * Computed the boundaries limits and return them\n * @method\n * @memberof Popper.Utils\n * @param {HTMLElement} popper\n * @param {HTMLElement} reference\n * @param {number} padding\n * @param {HTMLElement} boundariesElement - Element used to define the boundaries\n * @param {Boolean} fixedPosition - Is in fixed position mode\n * @returns {Object} Coordinates of the boundaries\n */\nfunction getBoundaries(popper, reference, padding, boundariesElement) {\n  var fixedPosition = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n\n  // NOTE: 1 DOM access here\n\n  var boundaries = { top: 0, left: 0 };\n  var offsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, reference);\n\n  // Handle viewport case\n  if (boundariesElement === 'viewport') {\n    boundaries = getViewportOffsetRectRelativeToArtbitraryNode(offsetParent, fixedPosition);\n  } else {\n    // Handle other cases based on DOM element used as boundaries\n    var boundariesNode = void 0;\n    if (boundariesElement === 'scrollParent') {\n      boundariesNode = getScrollParent(getParentNode(reference));\n      if (boundariesNode.nodeName === 'BODY') {\n        boundariesNode = popper.ownerDocument.documentElement;\n      }\n    } else if (boundariesElement === 'window') {\n      boundariesNode = popper.ownerDocument.documentElement;\n    } else {\n      boundariesNode = boundariesElement;\n    }\n\n    var offsets = getOffsetRectRelativeToArbitraryNode(boundariesNode, offsetParent, fixedPosition);\n\n    // In case of HTML, we need a different computation\n    if (boundariesNode.nodeName === 'HTML' && !isFixed(offsetParent)) {\n      var _getWindowSizes = getWindowSizes(popper.ownerDocument),\n          height = _getWindowSizes.height,\n          width = _getWindowSizes.width;\n\n      boundaries.top += offsets.top - offsets.marginTop;\n      boundaries.bottom = height + offsets.top;\n      boundaries.left += offsets.left - offsets.marginLeft;\n      boundaries.right = width + offsets.left;\n    } else {\n      // for all the other DOM elements, this one is good\n      boundaries = offsets;\n    }\n  }\n\n  // Add paddings\n  padding = padding || 0;\n  var isPaddingNumber = typeof padding === 'number';\n  boundaries.left += isPaddingNumber ? padding : padding.left || 0;\n  boundaries.top += isPaddingNumber ? padding : padding.top || 0;\n  boundaries.right -= isPaddingNumber ? padding : padding.right || 0;\n  boundaries.bottom -= isPaddingNumber ? padding : padding.bottom || 0;\n\n  return boundaries;\n}\n\nfunction getArea(_ref) {\n  var width = _ref.width,\n      height = _ref.height;\n\n  return width * height;\n}\n\n/**\n * Utility used to transform the `auto` placement to the placement with more\n * available space.\n * @method\n * @memberof Popper.Utils\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction computeAutoPlacement(placement, refRect, popper, reference, boundariesElement) {\n  var padding = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0;\n\n  if (placement.indexOf('auto') === -1) {\n    return placement;\n  }\n\n  var boundaries = getBoundaries(popper, reference, padding, boundariesElement);\n\n  var rects = {\n    top: {\n      width: boundaries.width,\n      height: refRect.top - boundaries.top\n    },\n    right: {\n      width: boundaries.right - refRect.right,\n      height: boundaries.height\n    },\n    bottom: {\n      width: boundaries.width,\n      height: boundaries.bottom - refRect.bottom\n    },\n    left: {\n      width: refRect.left - boundaries.left,\n      height: boundaries.height\n    }\n  };\n\n  var sortedAreas = Object.keys(rects).map(function (key) {\n    return _extends({\n      key: key\n    }, rects[key], {\n      area: getArea(rects[key])\n    });\n  }).sort(function (a, b) {\n    return b.area - a.area;\n  });\n\n  var filteredAreas = sortedAreas.filter(function (_ref2) {\n    var width = _ref2.width,\n        height = _ref2.height;\n    return width >= popper.clientWidth && height >= popper.clientHeight;\n  });\n\n  var computedPlacement = filteredAreas.length > 0 ? filteredAreas[0].key : sortedAreas[0].key;\n\n  var variation = placement.split('-')[1];\n\n  return computedPlacement + (variation ? '-' + variation : '');\n}\n\n/**\n * Get offsets to the reference element\n * @method\n * @memberof Popper.Utils\n * @param {Object} state\n * @param {Element} popper - the popper element\n * @param {Element} reference - the reference element (the popper will be relative to this)\n * @param {Element} fixedPosition - is in fixed position mode\n * @returns {Object} An object containing the offsets which will be applied to the popper\n */\nfunction getReferenceOffsets(state, popper, reference) {\n  var fixedPosition = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n\n  var commonOffsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, reference);\n  return getOffsetRectRelativeToArbitraryNode(reference, commonOffsetParent, fixedPosition);\n}\n\n/**\n * Get the outer sizes of the given element (offset size + margins)\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Object} object containing width and height properties\n */\nfunction getOuterSizes(element) {\n  var window = element.ownerDocument.defaultView;\n  var styles = window.getComputedStyle(element);\n  var x = parseFloat(styles.marginTop || 0) + parseFloat(styles.marginBottom || 0);\n  var y = parseFloat(styles.marginLeft || 0) + parseFloat(styles.marginRight || 0);\n  var result = {\n    width: element.offsetWidth + y,\n    height: element.offsetHeight + x\n  };\n  return result;\n}\n\n/**\n * Get the opposite placement of the given one\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement\n * @returns {String} flipped placement\n */\nfunction getOppositePlacement(placement) {\n  var hash = { left: 'right', right: 'left', bottom: 'top', top: 'bottom' };\n  return placement.replace(/left|right|bottom|top/g, function (matched) {\n    return hash[matched];\n  });\n}\n\n/**\n * Get offsets to the popper\n * @method\n * @memberof Popper.Utils\n * @param {Object} position - CSS position the Popper will get applied\n * @param {HTMLElement} popper - the popper element\n * @param {Object} referenceOffsets - the reference offsets (the popper will be relative to this)\n * @param {String} placement - one of the valid placement options\n * @returns {Object} popperOffsets - An object containing the offsets which will be applied to the popper\n */\nfunction getPopperOffsets(popper, referenceOffsets, placement) {\n  placement = placement.split('-')[0];\n\n  // Get popper node sizes\n  var popperRect = getOuterSizes(popper);\n\n  // Add position, width and height to our offsets object\n  var popperOffsets = {\n    width: popperRect.width,\n    height: popperRect.height\n  };\n\n  // depending by the popper placement we have to compute its offsets slightly differently\n  var isHoriz = ['right', 'left'].indexOf(placement) !== -1;\n  var mainSide = isHoriz ? 'top' : 'left';\n  var secondarySide = isHoriz ? 'left' : 'top';\n  var measurement = isHoriz ? 'height' : 'width';\n  var secondaryMeasurement = !isHoriz ? 'height' : 'width';\n\n  popperOffsets[mainSide] = referenceOffsets[mainSide] + referenceOffsets[measurement] / 2 - popperRect[measurement] / 2;\n  if (placement === secondarySide) {\n    popperOffsets[secondarySide] = referenceOffsets[secondarySide] - popperRect[secondaryMeasurement];\n  } else {\n    popperOffsets[secondarySide] = referenceOffsets[getOppositePlacement(secondarySide)];\n  }\n\n  return popperOffsets;\n}\n\n/**\n * Mimics the `find` method of Array\n * @method\n * @memberof Popper.Utils\n * @argument {Array} arr\n * @argument prop\n * @argument value\n * @returns index or -1\n */\nfunction find(arr, check) {\n  // use native find if supported\n  if (Array.prototype.find) {\n    return arr.find(check);\n  }\n\n  // use `filter` to obtain the same behavior of `find`\n  return arr.filter(check)[0];\n}\n\n/**\n * Return the index of the matching object\n * @method\n * @memberof Popper.Utils\n * @argument {Array} arr\n * @argument prop\n * @argument value\n * @returns index or -1\n */\nfunction findIndex(arr, prop, value) {\n  // use native findIndex if supported\n  if (Array.prototype.findIndex) {\n    return arr.findIndex(function (cur) {\n      return cur[prop] === value;\n    });\n  }\n\n  // use `find` + `indexOf` if `findIndex` isn't supported\n  var match = find(arr, function (obj) {\n    return obj[prop] === value;\n  });\n  return arr.indexOf(match);\n}\n\n/**\n * Loop trough the list of modifiers and run them in order,\n * each of them will then edit the data object.\n * @method\n * @memberof Popper.Utils\n * @param {dataObject} data\n * @param {Array} modifiers\n * @param {String} ends - Optional modifier name used as stopper\n * @returns {dataObject}\n */\nfunction runModifiers(modifiers, data, ends) {\n  var modifiersToRun = ends === undefined ? modifiers : modifiers.slice(0, findIndex(modifiers, 'name', ends));\n\n  modifiersToRun.forEach(function (modifier) {\n    if (modifier['function']) {\n      // eslint-disable-line dot-notation\n      console.warn('`modifier.function` is deprecated, use `modifier.fn`!');\n    }\n    var fn = modifier['function'] || modifier.fn; // eslint-disable-line dot-notation\n    if (modifier.enabled && isFunction(fn)) {\n      // Add properties to offsets to make them a complete clientRect object\n      // we do this before each modifier to make sure the previous one doesn't\n      // mess with these values\n      data.offsets.popper = getClientRect(data.offsets.popper);\n      data.offsets.reference = getClientRect(data.offsets.reference);\n\n      data = fn(data, modifier);\n    }\n  });\n\n  return data;\n}\n\n/**\n * Updates the position of the popper, computing the new offsets and applying\n * the new style.<br />\n * Prefer `scheduleUpdate` over `update` because of performance reasons.\n * @method\n * @memberof Popper\n */\nfunction update() {\n  // if popper is destroyed, don't perform any further update\n  if (this.state.isDestroyed) {\n    return;\n  }\n\n  var data = {\n    instance: this,\n    styles: {},\n    arrowStyles: {},\n    attributes: {},\n    flipped: false,\n    offsets: {}\n  };\n\n  // compute reference element offsets\n  data.offsets.reference = getReferenceOffsets(this.state, this.popper, this.reference, this.options.positionFixed);\n\n  // compute auto placement, store placement inside the data object,\n  // modifiers will be able to edit `placement` if needed\n  // and refer to originalPlacement to know the original value\n  data.placement = computeAutoPlacement(this.options.placement, data.offsets.reference, this.popper, this.reference, this.options.modifiers.flip.boundariesElement, this.options.modifiers.flip.padding);\n\n  // store the computed placement inside `originalPlacement`\n  data.originalPlacement = data.placement;\n\n  data.positionFixed = this.options.positionFixed;\n\n  // compute the popper offsets\n  data.offsets.popper = getPopperOffsets(this.popper, data.offsets.reference, data.placement);\n\n  data.offsets.popper.position = this.options.positionFixed ? 'fixed' : 'absolute';\n\n  // run the modifiers\n  data = runModifiers(this.modifiers, data);\n\n  // the first `update` will call `onCreate` callback\n  // the other ones will call `onUpdate` callback\n  if (!this.state.isCreated) {\n    this.state.isCreated = true;\n    this.options.onCreate(data);\n  } else {\n    this.options.onUpdate(data);\n  }\n}\n\n/**\n * Helper used to know if the given modifier is enabled.\n * @method\n * @memberof Popper.Utils\n * @returns {Boolean}\n */\nfunction isModifierEnabled(modifiers, modifierName) {\n  return modifiers.some(function (_ref) {\n    var name = _ref.name,\n        enabled = _ref.enabled;\n    return enabled && name === modifierName;\n  });\n}\n\n/**\n * Get the prefixed supported property name\n * @method\n * @memberof Popper.Utils\n * @argument {String} property (camelCase)\n * @returns {String} prefixed property (camelCase or PascalCase, depending on the vendor prefix)\n */\nfunction getSupportedPropertyName(property) {\n  var prefixes = [false, 'ms', 'Webkit', 'Moz', 'O'];\n  var upperProp = property.charAt(0).toUpperCase() + property.slice(1);\n\n  for (var i = 0; i < prefixes.length; i++) {\n    var prefix = prefixes[i];\n    var toCheck = prefix ? '' + prefix + upperProp : property;\n    if (typeof document.body.style[toCheck] !== 'undefined') {\n      return toCheck;\n    }\n  }\n  return null;\n}\n\n/**\n * Destroys the popper.\n * @method\n * @memberof Popper\n */\nfunction destroy() {\n  this.state.isDestroyed = true;\n\n  // touch DOM only if `applyStyle` modifier is enabled\n  if (isModifierEnabled(this.modifiers, 'applyStyle')) {\n    this.popper.removeAttribute('x-placement');\n    this.popper.style.position = '';\n    this.popper.style.top = '';\n    this.popper.style.left = '';\n    this.popper.style.right = '';\n    this.popper.style.bottom = '';\n    this.popper.style.willChange = '';\n    this.popper.style[getSupportedPropertyName('transform')] = '';\n  }\n\n  this.disableEventListeners();\n\n  // remove the popper if user explicity asked for the deletion on destroy\n  // do not use `remove` because IE11 doesn't support it\n  if (this.options.removeOnDestroy) {\n    this.popper.parentNode.removeChild(this.popper);\n  }\n  return this;\n}\n\n/**\n * Get the window associated with the element\n * @argument {Element} element\n * @returns {Window}\n */\nfunction getWindow(element) {\n  var ownerDocument = element.ownerDocument;\n  return ownerDocument ? ownerDocument.defaultView : window;\n}\n\nfunction attachToScrollParents(scrollParent, event, callback, scrollParents) {\n  var isBody = scrollParent.nodeName === 'BODY';\n  var target = isBody ? scrollParent.ownerDocument.defaultView : scrollParent;\n  target.addEventListener(event, callback, { passive: true });\n\n  if (!isBody) {\n    attachToScrollParents(getScrollParent(target.parentNode), event, callback, scrollParents);\n  }\n  scrollParents.push(target);\n}\n\n/**\n * Setup needed event listeners used to update the popper position\n * @method\n * @memberof Popper.Utils\n * @private\n */\nfunction setupEventListeners(reference, options, state, updateBound) {\n  // Resize event listener on window\n  state.updateBound = updateBound;\n  getWindow(reference).addEventListener('resize', state.updateBound, { passive: true });\n\n  // Scroll event listener on scroll parents\n  var scrollElement = getScrollParent(reference);\n  attachToScrollParents(scrollElement, 'scroll', state.updateBound, state.scrollParents);\n  state.scrollElement = scrollElement;\n  state.eventsEnabled = true;\n\n  return state;\n}\n\n/**\n * It will add resize/scroll events and start recalculating\n * position of the popper element when they are triggered.\n * @method\n * @memberof Popper\n */\nfunction enableEventListeners() {\n  if (!this.state.eventsEnabled) {\n    this.state = setupEventListeners(this.reference, this.options, this.state, this.scheduleUpdate);\n  }\n}\n\n/**\n * Remove event listeners used to update the popper position\n * @method\n * @memberof Popper.Utils\n * @private\n */\nfunction removeEventListeners(reference, state) {\n  // Remove resize event listener on window\n  getWindow(reference).removeEventListener('resize', state.updateBound);\n\n  // Remove scroll event listener on scroll parents\n  state.scrollParents.forEach(function (target) {\n    target.removeEventListener('scroll', state.updateBound);\n  });\n\n  // Reset state\n  state.updateBound = null;\n  state.scrollParents = [];\n  state.scrollElement = null;\n  state.eventsEnabled = false;\n  return state;\n}\n\n/**\n * It will remove resize/scroll events and won't recalculate popper position\n * when they are triggered. It also won't trigger `onUpdate` callback anymore,\n * unless you call `update` method manually.\n * @method\n * @memberof Popper\n */\nfunction disableEventListeners() {\n  if (this.state.eventsEnabled) {\n    cancelAnimationFrame(this.scheduleUpdate);\n    this.state = removeEventListeners(this.reference, this.state);\n  }\n}\n\n/**\n * Tells if a given input is a number\n * @method\n * @memberof Popper.Utils\n * @param {*} input to check\n * @return {Boolean}\n */\nfunction isNumeric(n) {\n  return n !== '' && !isNaN(parseFloat(n)) && isFinite(n);\n}\n\n/**\n * Set the style to the given popper\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element - Element to apply the style to\n * @argument {Object} styles\n * Object with a list of properties and values which will be applied to the element\n */\nfunction setStyles(element, styles) {\n  Object.keys(styles).forEach(function (prop) {\n    var unit = '';\n    // add unit if the value is numeric and is one of the following\n    if (['width', 'height', 'top', 'right', 'bottom', 'left'].indexOf(prop) !== -1 && isNumeric(styles[prop])) {\n      unit = 'px';\n    }\n    element.style[prop] = styles[prop] + unit;\n  });\n}\n\n/**\n * Set the attributes to the given popper\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element - Element to apply the attributes to\n * @argument {Object} styles\n * Object with a list of properties and values which will be applied to the element\n */\nfunction setAttributes(element, attributes) {\n  Object.keys(attributes).forEach(function (prop) {\n    var value = attributes[prop];\n    if (value !== false) {\n      element.setAttribute(prop, attributes[prop]);\n    } else {\n      element.removeAttribute(prop);\n    }\n  });\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} data.styles - List of style properties - values to apply to popper element\n * @argument {Object} data.attributes - List of attribute properties - values to apply to popper element\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The same data object\n */\nfunction applyStyle(data) {\n  // any property present in `data.styles` will be applied to the popper,\n  // in this way we can make the 3rd party modifiers add custom styles to it\n  // Be aware, modifiers could override the properties defined in the previous\n  // lines of this modifier!\n  setStyles(data.instance.popper, data.styles);\n\n  // any property present in `data.attributes` will be applied to the popper,\n  // they will be set as HTML attributes of the element\n  setAttributes(data.instance.popper, data.attributes);\n\n  // if arrowElement is defined and arrowStyles has some properties\n  if (data.arrowElement && Object.keys(data.arrowStyles).length) {\n    setStyles(data.arrowElement, data.arrowStyles);\n  }\n\n  return data;\n}\n\n/**\n * Set the x-placement attribute before everything else because it could be used\n * to add margins to the popper margins needs to be calculated to get the\n * correct popper offsets.\n * @method\n * @memberof Popper.modifiers\n * @param {HTMLElement} reference - The reference element used to position the popper\n * @param {HTMLElement} popper - The HTML element used as popper\n * @param {Object} options - Popper.js options\n */\nfunction applyStyleOnLoad(reference, popper, options, modifierOptions, state) {\n  // compute reference element offsets\n  var referenceOffsets = getReferenceOffsets(state, popper, reference, options.positionFixed);\n\n  // compute auto placement, store placement inside the data object,\n  // modifiers will be able to edit `placement` if needed\n  // and refer to originalPlacement to know the original value\n  var placement = computeAutoPlacement(options.placement, referenceOffsets, popper, reference, options.modifiers.flip.boundariesElement, options.modifiers.flip.padding);\n\n  popper.setAttribute('x-placement', placement);\n\n  // Apply `position` to popper before anything else because\n  // without the position applied we can't guarantee correct computations\n  setStyles(popper, { position: options.positionFixed ? 'fixed' : 'absolute' });\n\n  return options;\n}\n\n/**\n * @function\n * @memberof Popper.Utils\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Boolean} shouldRound - If the offsets should be rounded at all\n * @returns {Object} The popper's position offsets rounded\n *\n * The tale of pixel-perfect positioning. It's still not 100% perfect, but as\n * good as it can be within reason.\n * Discussion here: https://github.com/FezVrasta/popper.js/pull/715\n *\n * Low DPI screens cause a popper to be blurry if not using full pixels (Safari\n * as well on High DPI screens).\n *\n * Firefox prefers no rounding for positioning and does not have blurriness on\n * high DPI screens.\n *\n * Only horizontal placement and left/right values need to be considered.\n */\nfunction getRoundedOffsets(data, shouldRound) {\n  var _data$offsets = data.offsets,\n      popper = _data$offsets.popper,\n      reference = _data$offsets.reference;\n  var round = Math.round,\n      floor = Math.floor;\n\n  var noRound = function noRound(v) {\n    return v;\n  };\n\n  var referenceWidth = round(reference.width);\n  var popperWidth = round(popper.width);\n\n  var isVertical = ['left', 'right'].indexOf(data.placement) !== -1;\n  var isVariation = data.placement.indexOf('-') !== -1;\n  var sameWidthParity = referenceWidth % 2 === popperWidth % 2;\n  var bothOddWidth = referenceWidth % 2 === 1 && popperWidth % 2 === 1;\n\n  var horizontalToInteger = !shouldRound ? noRound : isVertical || isVariation || sameWidthParity ? round : floor;\n  var verticalToInteger = !shouldRound ? noRound : round;\n\n  return {\n    left: horizontalToInteger(bothOddWidth && !isVariation && shouldRound ? popper.left - 1 : popper.left),\n    top: verticalToInteger(popper.top),\n    bottom: verticalToInteger(popper.bottom),\n    right: horizontalToInteger(popper.right)\n  };\n}\n\nvar isFirefox = isBrowser && /Firefox/i.test(navigator.userAgent);\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction computeStyle(data, options) {\n  var x = options.x,\n      y = options.y;\n  var popper = data.offsets.popper;\n\n  // Remove this legacy support in Popper.js v2\n\n  var legacyGpuAccelerationOption = find(data.instance.modifiers, function (modifier) {\n    return modifier.name === 'applyStyle';\n  }).gpuAcceleration;\n  if (legacyGpuAccelerationOption !== undefined) {\n    console.warn('WARNING: `gpuAcceleration` option moved to `computeStyle` modifier and will not be supported in future versions of Popper.js!');\n  }\n  var gpuAcceleration = legacyGpuAccelerationOption !== undefined ? legacyGpuAccelerationOption : options.gpuAcceleration;\n\n  var offsetParent = getOffsetParent(data.instance.popper);\n  var offsetParentRect = getBoundingClientRect(offsetParent);\n\n  // Styles\n  var styles = {\n    position: popper.position\n  };\n\n  var offsets = getRoundedOffsets(data, window.devicePixelRatio < 2 || !isFirefox);\n\n  var sideA = x === 'bottom' ? 'top' : 'bottom';\n  var sideB = y === 'right' ? 'left' : 'right';\n\n  // if gpuAcceleration is set to `true` and transform is supported,\n  //  we use `translate3d` to apply the position to the popper we\n  // automatically use the supported prefixed version if needed\n  var prefixedProperty = getSupportedPropertyName('transform');\n\n  // now, let's make a step back and look at this code closely (wtf?)\n  // If the content of the popper grows once it's been positioned, it\n  // may happen that the popper gets misplaced because of the new content\n  // overflowing its reference element\n  // To avoid this problem, we provide two options (x and y), which allow\n  // the consumer to define the offset origin.\n  // If we position a popper on top of a reference element, we can set\n  // `x` to `top` to make the popper grow towards its top instead of\n  // its bottom.\n  var left = void 0,\n      top = void 0;\n  if (sideA === 'bottom') {\n    // when offsetParent is <html> the positioning is relative to the bottom of the screen (excluding the scrollbar)\n    // and not the bottom of the html element\n    if (offsetParent.nodeName === 'HTML') {\n      top = -offsetParent.clientHeight + offsets.bottom;\n    } else {\n      top = -offsetParentRect.height + offsets.bottom;\n    }\n  } else {\n    top = offsets.top;\n  }\n  if (sideB === 'right') {\n    if (offsetParent.nodeName === 'HTML') {\n      left = -offsetParent.clientWidth + offsets.right;\n    } else {\n      left = -offsetParentRect.width + offsets.right;\n    }\n  } else {\n    left = offsets.left;\n  }\n  if (gpuAcceleration && prefixedProperty) {\n    styles[prefixedProperty] = 'translate3d(' + left + 'px, ' + top + 'px, 0)';\n    styles[sideA] = 0;\n    styles[sideB] = 0;\n    styles.willChange = 'transform';\n  } else {\n    // othwerise, we use the standard `top`, `left`, `bottom` and `right` properties\n    var invertTop = sideA === 'bottom' ? -1 : 1;\n    var invertLeft = sideB === 'right' ? -1 : 1;\n    styles[sideA] = top * invertTop;\n    styles[sideB] = left * invertLeft;\n    styles.willChange = sideA + ', ' + sideB;\n  }\n\n  // Attributes\n  var attributes = {\n    'x-placement': data.placement\n  };\n\n  // Update `data` attributes, styles and arrowStyles\n  data.attributes = _extends({}, attributes, data.attributes);\n  data.styles = _extends({}, styles, data.styles);\n  data.arrowStyles = _extends({}, data.offsets.arrow, data.arrowStyles);\n\n  return data;\n}\n\n/**\n * Helper used to know if the given modifier depends from another one.<br />\n * It checks if the needed modifier is listed and enabled.\n * @method\n * @memberof Popper.Utils\n * @param {Array} modifiers - list of modifiers\n * @param {String} requestingName - name of requesting modifier\n * @param {String} requestedName - name of requested modifier\n * @returns {Boolean}\n */\nfunction isModifierRequired(modifiers, requestingName, requestedName) {\n  var requesting = find(modifiers, function (_ref) {\n    var name = _ref.name;\n    return name === requestingName;\n  });\n\n  var isRequired = !!requesting && modifiers.some(function (modifier) {\n    return modifier.name === requestedName && modifier.enabled && modifier.order < requesting.order;\n  });\n\n  if (!isRequired) {\n    var _requesting = '`' + requestingName + '`';\n    var requested = '`' + requestedName + '`';\n    console.warn(requested + ' modifier is required by ' + _requesting + ' modifier in order to work, be sure to include it before ' + _requesting + '!');\n  }\n  return isRequired;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction arrow(data, options) {\n  var _data$offsets$arrow;\n\n  // arrow depends on keepTogether in order to work\n  if (!isModifierRequired(data.instance.modifiers, 'arrow', 'keepTogether')) {\n    return data;\n  }\n\n  var arrowElement = options.element;\n\n  // if arrowElement is a string, suppose it's a CSS selector\n  if (typeof arrowElement === 'string') {\n    arrowElement = data.instance.popper.querySelector(arrowElement);\n\n    // if arrowElement is not found, don't run the modifier\n    if (!arrowElement) {\n      return data;\n    }\n  } else {\n    // if the arrowElement isn't a query selector we must check that the\n    // provided DOM node is child of its popper node\n    if (!data.instance.popper.contains(arrowElement)) {\n      console.warn('WARNING: `arrow.element` must be child of its popper element!');\n      return data;\n    }\n  }\n\n  var placement = data.placement.split('-')[0];\n  var _data$offsets = data.offsets,\n      popper = _data$offsets.popper,\n      reference = _data$offsets.reference;\n\n  var isVertical = ['left', 'right'].indexOf(placement) !== -1;\n\n  var len = isVertical ? 'height' : 'width';\n  var sideCapitalized = isVertical ? 'Top' : 'Left';\n  var side = sideCapitalized.toLowerCase();\n  var altSide = isVertical ? 'left' : 'top';\n  var opSide = isVertical ? 'bottom' : 'right';\n  var arrowElementSize = getOuterSizes(arrowElement)[len];\n\n  //\n  // extends keepTogether behavior making sure the popper and its\n  // reference have enough pixels in conjunction\n  //\n\n  // top/left side\n  if (reference[opSide] - arrowElementSize < popper[side]) {\n    data.offsets.popper[side] -= popper[side] - (reference[opSide] - arrowElementSize);\n  }\n  // bottom/right side\n  if (reference[side] + arrowElementSize > popper[opSide]) {\n    data.offsets.popper[side] += reference[side] + arrowElementSize - popper[opSide];\n  }\n  data.offsets.popper = getClientRect(data.offsets.popper);\n\n  // compute center of the popper\n  var center = reference[side] + reference[len] / 2 - arrowElementSize / 2;\n\n  // Compute the sideValue using the updated popper offsets\n  // take popper margin in account because we don't have this info available\n  var css = getStyleComputedProperty(data.instance.popper);\n  var popperMarginSide = parseFloat(css['margin' + sideCapitalized], 10);\n  var popperBorderSide = parseFloat(css['border' + sideCapitalized + 'Width'], 10);\n  var sideValue = center - data.offsets.popper[side] - popperMarginSide - popperBorderSide;\n\n  // prevent arrowElement from being placed not contiguously to its popper\n  sideValue = Math.max(Math.min(popper[len] - arrowElementSize, sideValue), 0);\n\n  data.arrowElement = arrowElement;\n  data.offsets.arrow = (_data$offsets$arrow = {}, defineProperty(_data$offsets$arrow, side, Math.round(sideValue)), defineProperty(_data$offsets$arrow, altSide, ''), _data$offsets$arrow);\n\n  return data;\n}\n\n/**\n * Get the opposite placement variation of the given one\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement variation\n * @returns {String} flipped placement variation\n */\nfunction getOppositeVariation(variation) {\n  if (variation === 'end') {\n    return 'start';\n  } else if (variation === 'start') {\n    return 'end';\n  }\n  return variation;\n}\n\n/**\n * List of accepted placements to use as values of the `placement` option.<br />\n * Valid placements are:\n * - `auto`\n * - `top`\n * - `right`\n * - `bottom`\n * - `left`\n *\n * Each placement can have a variation from this list:\n * - `-start`\n * - `-end`\n *\n * Variations are interpreted easily if you think of them as the left to right\n * written languages. Horizontally (`top` and `bottom`), `start` is left and `end`\n * is right.<br />\n * Vertically (`left` and `right`), `start` is top and `end` is bottom.\n *\n * Some valid examples are:\n * - `top-end` (on top of reference, right aligned)\n * - `right-start` (on right of reference, top aligned)\n * - `bottom` (on bottom, centered)\n * - `auto-end` (on the side with more space available, alignment depends by placement)\n *\n * @static\n * @type {Array}\n * @enum {String}\n * @readonly\n * @method placements\n * @memberof Popper\n */\nvar placements = ['auto-start', 'auto', 'auto-end', 'top-start', 'top', 'top-end', 'right-start', 'right', 'right-end', 'bottom-end', 'bottom', 'bottom-start', 'left-end', 'left', 'left-start'];\n\n// Get rid of `auto` `auto-start` and `auto-end`\nvar validPlacements = placements.slice(3);\n\n/**\n * Given an initial placement, returns all the subsequent placements\n * clockwise (or counter-clockwise).\n *\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement - A valid placement (it accepts variations)\n * @argument {Boolean} counter - Set to true to walk the placements counterclockwise\n * @returns {Array} placements including their variations\n */\nfunction clockwise(placement) {\n  var counter = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n  var index = validPlacements.indexOf(placement);\n  var arr = validPlacements.slice(index + 1).concat(validPlacements.slice(0, index));\n  return counter ? arr.reverse() : arr;\n}\n\nvar BEHAVIORS = {\n  FLIP: 'flip',\n  CLOCKWISE: 'clockwise',\n  COUNTERCLOCKWISE: 'counterclockwise'\n};\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction flip(data, options) {\n  // if `inner` modifier is enabled, we can't use the `flip` modifier\n  if (isModifierEnabled(data.instance.modifiers, 'inner')) {\n    return data;\n  }\n\n  if (data.flipped && data.placement === data.originalPlacement) {\n    // seems like flip is trying to loop, probably there's not enough space on any of the flippable sides\n    return data;\n  }\n\n  var boundaries = getBoundaries(data.instance.popper, data.instance.reference, options.padding, options.boundariesElement, data.positionFixed);\n\n  var placement = data.placement.split('-')[0];\n  var placementOpposite = getOppositePlacement(placement);\n  var variation = data.placement.split('-')[1] || '';\n\n  var flipOrder = [];\n\n  switch (options.behavior) {\n    case BEHAVIORS.FLIP:\n      flipOrder = [placement, placementOpposite];\n      break;\n    case BEHAVIORS.CLOCKWISE:\n      flipOrder = clockwise(placement);\n      break;\n    case BEHAVIORS.COUNTERCLOCKWISE:\n      flipOrder = clockwise(placement, true);\n      break;\n    default:\n      flipOrder = options.behavior;\n  }\n\n  flipOrder.forEach(function (step, index) {\n    if (placement !== step || flipOrder.length === index + 1) {\n      return data;\n    }\n\n    placement = data.placement.split('-')[0];\n    placementOpposite = getOppositePlacement(placement);\n\n    var popperOffsets = data.offsets.popper;\n    var refOffsets = data.offsets.reference;\n\n    // using floor because the reference offsets may contain decimals we are not going to consider here\n    var floor = Math.floor;\n    var overlapsRef = placement === 'left' && floor(popperOffsets.right) > floor(refOffsets.left) || placement === 'right' && floor(popperOffsets.left) < floor(refOffsets.right) || placement === 'top' && floor(popperOffsets.bottom) > floor(refOffsets.top) || placement === 'bottom' && floor(popperOffsets.top) < floor(refOffsets.bottom);\n\n    var overflowsLeft = floor(popperOffsets.left) < floor(boundaries.left);\n    var overflowsRight = floor(popperOffsets.right) > floor(boundaries.right);\n    var overflowsTop = floor(popperOffsets.top) < floor(boundaries.top);\n    var overflowsBottom = floor(popperOffsets.bottom) > floor(boundaries.bottom);\n\n    var overflowsBoundaries = placement === 'left' && overflowsLeft || placement === 'right' && overflowsRight || placement === 'top' && overflowsTop || placement === 'bottom' && overflowsBottom;\n\n    // flip the variation if required\n    var isVertical = ['top', 'bottom'].indexOf(placement) !== -1;\n\n    // flips variation if reference element overflows boundaries\n    var flippedVariationByRef = !!options.flipVariations && (isVertical && variation === 'start' && overflowsLeft || isVertical && variation === 'end' && overflowsRight || !isVertical && variation === 'start' && overflowsTop || !isVertical && variation === 'end' && overflowsBottom);\n\n    // flips variation if popper content overflows boundaries\n    var flippedVariationByContent = !!options.flipVariationsByContent && (isVertical && variation === 'start' && overflowsRight || isVertical && variation === 'end' && overflowsLeft || !isVertical && variation === 'start' && overflowsBottom || !isVertical && variation === 'end' && overflowsTop);\n\n    var flippedVariation = flippedVariationByRef || flippedVariationByContent;\n\n    if (overlapsRef || overflowsBoundaries || flippedVariation) {\n      // this boolean to detect any flip loop\n      data.flipped = true;\n\n      if (overlapsRef || overflowsBoundaries) {\n        placement = flipOrder[index + 1];\n      }\n\n      if (flippedVariation) {\n        variation = getOppositeVariation(variation);\n      }\n\n      data.placement = placement + (variation ? '-' + variation : '');\n\n      // this object contains `position`, we want to preserve it along with\n      // any additional property we may add in the future\n      data.offsets.popper = _extends({}, data.offsets.popper, getPopperOffsets(data.instance.popper, data.offsets.reference, data.placement));\n\n      data = runModifiers(data.instance.modifiers, data, 'flip');\n    }\n  });\n  return data;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction keepTogether(data) {\n  var _data$offsets = data.offsets,\n      popper = _data$offsets.popper,\n      reference = _data$offsets.reference;\n\n  var placement = data.placement.split('-')[0];\n  var floor = Math.floor;\n  var isVertical = ['top', 'bottom'].indexOf(placement) !== -1;\n  var side = isVertical ? 'right' : 'bottom';\n  var opSide = isVertical ? 'left' : 'top';\n  var measurement = isVertical ? 'width' : 'height';\n\n  if (popper[side] < floor(reference[opSide])) {\n    data.offsets.popper[opSide] = floor(reference[opSide]) - popper[measurement];\n  }\n  if (popper[opSide] > floor(reference[side])) {\n    data.offsets.popper[opSide] = floor(reference[side]);\n  }\n\n  return data;\n}\n\n/**\n * Converts a string containing value + unit into a px value number\n * @function\n * @memberof {modifiers~offset}\n * @private\n * @argument {String} str - Value + unit string\n * @argument {String} measurement - `height` or `width`\n * @argument {Object} popperOffsets\n * @argument {Object} referenceOffsets\n * @returns {Number|String}\n * Value in pixels, or original string if no values were extracted\n */\nfunction toValue(str, measurement, popperOffsets, referenceOffsets) {\n  // separate value from unit\n  var split = str.match(/((?:\\-|\\+)?\\d*\\.?\\d*)(.*)/);\n  var value = +split[1];\n  var unit = split[2];\n\n  // If it's not a number it's an operator, I guess\n  if (!value) {\n    return str;\n  }\n\n  if (unit.indexOf('%') === 0) {\n    var element = void 0;\n    switch (unit) {\n      case '%p':\n        element = popperOffsets;\n        break;\n      case '%':\n      case '%r':\n      default:\n        element = referenceOffsets;\n    }\n\n    var rect = getClientRect(element);\n    return rect[measurement] / 100 * value;\n  } else if (unit === 'vh' || unit === 'vw') {\n    // if is a vh or vw, we calculate the size based on the viewport\n    var size = void 0;\n    if (unit === 'vh') {\n      size = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);\n    } else {\n      size = Math.max(document.documentElement.clientWidth, window.innerWidth || 0);\n    }\n    return size / 100 * value;\n  } else {\n    // if is an explicit pixel unit, we get rid of the unit and keep the value\n    // if is an implicit unit, it's px, and we return just the value\n    return value;\n  }\n}\n\n/**\n * Parse an `offset` string to extrapolate `x` and `y` numeric offsets.\n * @function\n * @memberof {modifiers~offset}\n * @private\n * @argument {String} offset\n * @argument {Object} popperOffsets\n * @argument {Object} referenceOffsets\n * @argument {String} basePlacement\n * @returns {Array} a two cells array with x and y offsets in numbers\n */\nfunction parseOffset(offset, popperOffsets, referenceOffsets, basePlacement) {\n  var offsets = [0, 0];\n\n  // Use height if placement is left or right and index is 0 otherwise use width\n  // in this way the first offset will use an axis and the second one\n  // will use the other one\n  var useHeight = ['right', 'left'].indexOf(basePlacement) !== -1;\n\n  // Split the offset string to obtain a list of values and operands\n  // The regex addresses values with the plus or minus sign in front (+10, -20, etc)\n  var fragments = offset.split(/(\\+|\\-)/).map(function (frag) {\n    return frag.trim();\n  });\n\n  // Detect if the offset string contains a pair of values or a single one\n  // they could be separated by comma or space\n  var divider = fragments.indexOf(find(fragments, function (frag) {\n    return frag.search(/,|\\s/) !== -1;\n  }));\n\n  if (fragments[divider] && fragments[divider].indexOf(',') === -1) {\n    console.warn('Offsets separated by white space(s) are deprecated, use a comma (,) instead.');\n  }\n\n  // If divider is found, we divide the list of values and operands to divide\n  // them by ofset X and Y.\n  var splitRegex = /\\s*,\\s*|\\s+/;\n  var ops = divider !== -1 ? [fragments.slice(0, divider).concat([fragments[divider].split(splitRegex)[0]]), [fragments[divider].split(splitRegex)[1]].concat(fragments.slice(divider + 1))] : [fragments];\n\n  // Convert the values with units to absolute pixels to allow our computations\n  ops = ops.map(function (op, index) {\n    // Most of the units rely on the orientation of the popper\n    var measurement = (index === 1 ? !useHeight : useHeight) ? 'height' : 'width';\n    var mergeWithPrevious = false;\n    return op\n    // This aggregates any `+` or `-` sign that aren't considered operators\n    // e.g.: 10 + +5 => [10, +, +5]\n    .reduce(function (a, b) {\n      if (a[a.length - 1] === '' && ['+', '-'].indexOf(b) !== -1) {\n        a[a.length - 1] = b;\n        mergeWithPrevious = true;\n        return a;\n      } else if (mergeWithPrevious) {\n        a[a.length - 1] += b;\n        mergeWithPrevious = false;\n        return a;\n      } else {\n        return a.concat(b);\n      }\n    }, [])\n    // Here we convert the string values into number values (in px)\n    .map(function (str) {\n      return toValue(str, measurement, popperOffsets, referenceOffsets);\n    });\n  });\n\n  // Loop trough the offsets arrays and execute the operations\n  ops.forEach(function (op, index) {\n    op.forEach(function (frag, index2) {\n      if (isNumeric(frag)) {\n        offsets[index] += frag * (op[index2 - 1] === '-' ? -1 : 1);\n      }\n    });\n  });\n  return offsets;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @argument {Number|String} options.offset=0\n * The offset value as described in the modifier description\n * @returns {Object} The data object, properly modified\n */\nfunction offset(data, _ref) {\n  var offset = _ref.offset;\n  var placement = data.placement,\n      _data$offsets = data.offsets,\n      popper = _data$offsets.popper,\n      reference = _data$offsets.reference;\n\n  var basePlacement = placement.split('-')[0];\n\n  var offsets = void 0;\n  if (isNumeric(+offset)) {\n    offsets = [+offset, 0];\n  } else {\n    offsets = parseOffset(offset, popper, reference, basePlacement);\n  }\n\n  if (basePlacement === 'left') {\n    popper.top += offsets[0];\n    popper.left -= offsets[1];\n  } else if (basePlacement === 'right') {\n    popper.top += offsets[0];\n    popper.left += offsets[1];\n  } else if (basePlacement === 'top') {\n    popper.left += offsets[0];\n    popper.top -= offsets[1];\n  } else if (basePlacement === 'bottom') {\n    popper.left += offsets[0];\n    popper.top += offsets[1];\n  }\n\n  data.popper = popper;\n  return data;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction preventOverflow(data, options) {\n  var boundariesElement = options.boundariesElement || getOffsetParent(data.instance.popper);\n\n  // If offsetParent is the reference element, we really want to\n  // go one step up and use the next offsetParent as reference to\n  // avoid to make this modifier completely useless and look like broken\n  if (data.instance.reference === boundariesElement) {\n    boundariesElement = getOffsetParent(boundariesElement);\n  }\n\n  // NOTE: DOM access here\n  // resets the popper's position so that the document size can be calculated excluding\n  // the size of the popper element itself\n  var transformProp = getSupportedPropertyName('transform');\n  var popperStyles = data.instance.popper.style; // assignment to help minification\n  var top = popperStyles.top,\n      left = popperStyles.left,\n      transform = popperStyles[transformProp];\n\n  popperStyles.top = '';\n  popperStyles.left = '';\n  popperStyles[transformProp] = '';\n\n  var boundaries = getBoundaries(data.instance.popper, data.instance.reference, options.padding, boundariesElement, data.positionFixed);\n\n  // NOTE: DOM access here\n  // restores the original style properties after the offsets have been computed\n  popperStyles.top = top;\n  popperStyles.left = left;\n  popperStyles[transformProp] = transform;\n\n  options.boundaries = boundaries;\n\n  var order = options.priority;\n  var popper = data.offsets.popper;\n\n  var check = {\n    primary: function primary(placement) {\n      var value = popper[placement];\n      if (popper[placement] < boundaries[placement] && !options.escapeWithReference) {\n        value = Math.max(popper[placement], boundaries[placement]);\n      }\n      return defineProperty({}, placement, value);\n    },\n    secondary: function secondary(placement) {\n      var mainSide = placement === 'right' ? 'left' : 'top';\n      var value = popper[mainSide];\n      if (popper[placement] > boundaries[placement] && !options.escapeWithReference) {\n        value = Math.min(popper[mainSide], boundaries[placement] - (placement === 'right' ? popper.width : popper.height));\n      }\n      return defineProperty({}, mainSide, value);\n    }\n  };\n\n  order.forEach(function (placement) {\n    var side = ['left', 'top'].indexOf(placement) !== -1 ? 'primary' : 'secondary';\n    popper = _extends({}, popper, check[side](placement));\n  });\n\n  data.offsets.popper = popper;\n\n  return data;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction shift(data) {\n  var placement = data.placement;\n  var basePlacement = placement.split('-')[0];\n  var shiftvariation = placement.split('-')[1];\n\n  // if shift shiftvariation is specified, run the modifier\n  if (shiftvariation) {\n    var _data$offsets = data.offsets,\n        reference = _data$offsets.reference,\n        popper = _data$offsets.popper;\n\n    var isVertical = ['bottom', 'top'].indexOf(basePlacement) !== -1;\n    var side = isVertical ? 'left' : 'top';\n    var measurement = isVertical ? 'width' : 'height';\n\n    var shiftOffsets = {\n      start: defineProperty({}, side, reference[side]),\n      end: defineProperty({}, side, reference[side] + reference[measurement] - popper[measurement])\n    };\n\n    data.offsets.popper = _extends({}, popper, shiftOffsets[shiftvariation]);\n  }\n\n  return data;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction hide(data) {\n  if (!isModifierRequired(data.instance.modifiers, 'hide', 'preventOverflow')) {\n    return data;\n  }\n\n  var refRect = data.offsets.reference;\n  var bound = find(data.instance.modifiers, function (modifier) {\n    return modifier.name === 'preventOverflow';\n  }).boundaries;\n\n  if (refRect.bottom < bound.top || refRect.left > bound.right || refRect.top > bound.bottom || refRect.right < bound.left) {\n    // Avoid unnecessary DOM access if visibility hasn't changed\n    if (data.hide === true) {\n      return data;\n    }\n\n    data.hide = true;\n    data.attributes['x-out-of-boundaries'] = '';\n  } else {\n    // Avoid unnecessary DOM access if visibility hasn't changed\n    if (data.hide === false) {\n      return data;\n    }\n\n    data.hide = false;\n    data.attributes['x-out-of-boundaries'] = false;\n  }\n\n  return data;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction inner(data) {\n  var placement = data.placement;\n  var basePlacement = placement.split('-')[0];\n  var _data$offsets = data.offsets,\n      popper = _data$offsets.popper,\n      reference = _data$offsets.reference;\n\n  var isHoriz = ['left', 'right'].indexOf(basePlacement) !== -1;\n\n  var subtractLength = ['top', 'left'].indexOf(basePlacement) === -1;\n\n  popper[isHoriz ? 'left' : 'top'] = reference[basePlacement] - (subtractLength ? popper[isHoriz ? 'width' : 'height'] : 0);\n\n  data.placement = getOppositePlacement(placement);\n  data.offsets.popper = getClientRect(popper);\n\n  return data;\n}\n\n/**\n * Modifier function, each modifier can have a function of this type assigned\n * to its `fn` property.<br />\n * These functions will be called on each update, this means that you must\n * make sure they are performant enough to avoid performance bottlenecks.\n *\n * @function ModifierFn\n * @argument {dataObject} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {dataObject} The data object, properly modified\n */\n\n/**\n * Modifiers are plugins used to alter the behavior of your poppers.<br />\n * Popper.js uses a set of 9 modifiers to provide all the basic functionalities\n * needed by the library.\n *\n * Usually you don't want to override the `order`, `fn` and `onLoad` props.\n * All the other properties are configurations that could be tweaked.\n * @namespace modifiers\n */\nvar modifiers = {\n  /**\n   * Modifier used to shift the popper on the start or end of its reference\n   * element.<br />\n   * It will read the variation of the `placement` property.<br />\n   * It can be one either `-end` or `-start`.\n   * @memberof modifiers\n   * @inner\n   */\n  shift: {\n    /** @prop {number} order=100 - Index used to define the order of execution */\n    order: 100,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: shift\n  },\n\n  /**\n   * The `offset` modifier can shift your popper on both its axis.\n   *\n   * It accepts the following units:\n   * - `px` or unit-less, interpreted as pixels\n   * - `%` or `%r`, percentage relative to the length of the reference element\n   * - `%p`, percentage relative to the length of the popper element\n   * - `vw`, CSS viewport width unit\n   * - `vh`, CSS viewport height unit\n   *\n   * For length is intended the main axis relative to the placement of the popper.<br />\n   * This means that if the placement is `top` or `bottom`, the length will be the\n   * `width`. In case of `left` or `right`, it will be the `height`.\n   *\n   * You can provide a single value (as `Number` or `String`), or a pair of values\n   * as `String` divided by a comma or one (or more) white spaces.<br />\n   * The latter is a deprecated method because it leads to confusion and will be\n   * removed in v2.<br />\n   * Additionally, it accepts additions and subtractions between different units.\n   * Note that multiplications and divisions aren't supported.\n   *\n   * Valid examples are:\n   * ```\n   * 10\n   * '10%'\n   * '10, 10'\n   * '10%, 10'\n   * '10 + 10%'\n   * '10 - 5vh + 3%'\n   * '-10px + 5vh, 5px - 6%'\n   * ```\n   * > **NB**: If you desire to apply offsets to your poppers in a way that may make them overlap\n   * > with their reference element, unfortunately, you will have to disable the `flip` modifier.\n   * > You can read more on this at this [issue](https://github.com/FezVrasta/popper.js/issues/373).\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  offset: {\n    /** @prop {number} order=200 - Index used to define the order of execution */\n    order: 200,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: offset,\n    /** @prop {Number|String} offset=0\n     * The offset value as described in the modifier description\n     */\n    offset: 0\n  },\n\n  /**\n   * Modifier used to prevent the popper from being positioned outside the boundary.\n   *\n   * A scenario exists where the reference itself is not within the boundaries.<br />\n   * We can say it has \"escaped the boundaries\" — or just \"escaped\".<br />\n   * In this case we need to decide whether the popper should either:\n   *\n   * - detach from the reference and remain \"trapped\" in the boundaries, or\n   * - if it should ignore the boundary and \"escape with its reference\"\n   *\n   * When `escapeWithReference` is set to`true` and reference is completely\n   * outside its boundaries, the popper will overflow (or completely leave)\n   * the boundaries in order to remain attached to the edge of the reference.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  preventOverflow: {\n    /** @prop {number} order=300 - Index used to define the order of execution */\n    order: 300,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: preventOverflow,\n    /**\n     * @prop {Array} [priority=['left','right','top','bottom']]\n     * Popper will try to prevent overflow following these priorities by default,\n     * then, it could overflow on the left and on top of the `boundariesElement`\n     */\n    priority: ['left', 'right', 'top', 'bottom'],\n    /**\n     * @prop {number} padding=5\n     * Amount of pixel used to define a minimum distance between the boundaries\n     * and the popper. This makes sure the popper always has a little padding\n     * between the edges of its container\n     */\n    padding: 5,\n    /**\n     * @prop {String|HTMLElement} boundariesElement='scrollParent'\n     * Boundaries used by the modifier. Can be `scrollParent`, `window`,\n     * `viewport` or any DOM element.\n     */\n    boundariesElement: 'scrollParent'\n  },\n\n  /**\n   * Modifier used to make sure the reference and its popper stay near each other\n   * without leaving any gap between the two. Especially useful when the arrow is\n   * enabled and you want to ensure that it points to its reference element.\n   * It cares only about the first axis. You can still have poppers with margin\n   * between the popper and its reference element.\n   * @memberof modifiers\n   * @inner\n   */\n  keepTogether: {\n    /** @prop {number} order=400 - Index used to define the order of execution */\n    order: 400,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: keepTogether\n  },\n\n  /**\n   * This modifier is used to move the `arrowElement` of the popper to make\n   * sure it is positioned between the reference element and its popper element.\n   * It will read the outer size of the `arrowElement` node to detect how many\n   * pixels of conjunction are needed.\n   *\n   * It has no effect if no `arrowElement` is provided.\n   * @memberof modifiers\n   * @inner\n   */\n  arrow: {\n    /** @prop {number} order=500 - Index used to define the order of execution */\n    order: 500,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: arrow,\n    /** @prop {String|HTMLElement} element='[x-arrow]' - Selector or node used as arrow */\n    element: '[x-arrow]'\n  },\n\n  /**\n   * Modifier used to flip the popper's placement when it starts to overlap its\n   * reference element.\n   *\n   * Requires the `preventOverflow` modifier before it in order to work.\n   *\n   * **NOTE:** this modifier will interrupt the current update cycle and will\n   * restart it if it detects the need to flip the placement.\n   * @memberof modifiers\n   * @inner\n   */\n  flip: {\n    /** @prop {number} order=600 - Index used to define the order of execution */\n    order: 600,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: flip,\n    /**\n     * @prop {String|Array} behavior='flip'\n     * The behavior used to change the popper's placement. It can be one of\n     * `flip`, `clockwise`, `counterclockwise` or an array with a list of valid\n     * placements (with optional variations)\n     */\n    behavior: 'flip',\n    /**\n     * @prop {number} padding=5\n     * The popper will flip if it hits the edges of the `boundariesElement`\n     */\n    padding: 5,\n    /**\n     * @prop {String|HTMLElement} boundariesElement='viewport'\n     * The element which will define the boundaries of the popper position.\n     * The popper will never be placed outside of the defined boundaries\n     * (except if `keepTogether` is enabled)\n     */\n    boundariesElement: 'viewport',\n    /**\n     * @prop {Boolean} flipVariations=false\n     * The popper will switch placement variation between `-start` and `-end` when\n     * the reference element overlaps its boundaries.\n     *\n     * The original placement should have a set variation.\n     */\n    flipVariations: false,\n    /**\n     * @prop {Boolean} flipVariationsByContent=false\n     * The popper will switch placement variation between `-start` and `-end` when\n     * the popper element overlaps its reference boundaries.\n     *\n     * The original placement should have a set variation.\n     */\n    flipVariationsByContent: false\n  },\n\n  /**\n   * Modifier used to make the popper flow toward the inner of the reference element.\n   * By default, when this modifier is disabled, the popper will be placed outside\n   * the reference element.\n   * @memberof modifiers\n   * @inner\n   */\n  inner: {\n    /** @prop {number} order=700 - Index used to define the order of execution */\n    order: 700,\n    /** @prop {Boolean} enabled=false - Whether the modifier is enabled or not */\n    enabled: false,\n    /** @prop {ModifierFn} */\n    fn: inner\n  },\n\n  /**\n   * Modifier used to hide the popper when its reference element is outside of the\n   * popper boundaries. It will set a `x-out-of-boundaries` attribute which can\n   * be used to hide with a CSS selector the popper when its reference is\n   * out of boundaries.\n   *\n   * Requires the `preventOverflow` modifier before it in order to work.\n   * @memberof modifiers\n   * @inner\n   */\n  hide: {\n    /** @prop {number} order=800 - Index used to define the order of execution */\n    order: 800,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: hide\n  },\n\n  /**\n   * Computes the style that will be applied to the popper element to gets\n   * properly positioned.\n   *\n   * Note that this modifier will not touch the DOM, it just prepares the styles\n   * so that `applyStyle` modifier can apply it. This separation is useful\n   * in case you need to replace `applyStyle` with a custom implementation.\n   *\n   * This modifier has `850` as `order` value to maintain backward compatibility\n   * with previous versions of Popper.js. Expect the modifiers ordering method\n   * to change in future major versions of the library.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  computeStyle: {\n    /** @prop {number} order=850 - Index used to define the order of execution */\n    order: 850,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: computeStyle,\n    /**\n     * @prop {Boolean} gpuAcceleration=true\n     * If true, it uses the CSS 3D transformation to position the popper.\n     * Otherwise, it will use the `top` and `left` properties\n     */\n    gpuAcceleration: true,\n    /**\n     * @prop {string} [x='bottom']\n     * Where to anchor the X axis (`bottom` or `top`). AKA X offset origin.\n     * Change this if your popper should grow in a direction different from `bottom`\n     */\n    x: 'bottom',\n    /**\n     * @prop {string} [x='left']\n     * Where to anchor the Y axis (`left` or `right`). AKA Y offset origin.\n     * Change this if your popper should grow in a direction different from `right`\n     */\n    y: 'right'\n  },\n\n  /**\n   * Applies the computed styles to the popper element.\n   *\n   * All the DOM manipulations are limited to this modifier. This is useful in case\n   * you want to integrate Popper.js inside a framework or view library and you\n   * want to delegate all the DOM manipulations to it.\n   *\n   * Note that if you disable this modifier, you must make sure the popper element\n   * has its position set to `absolute` before Popper.js can do its work!\n   *\n   * Just disable this modifier and define your own to achieve the desired effect.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  applyStyle: {\n    /** @prop {number} order=900 - Index used to define the order of execution */\n    order: 900,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: applyStyle,\n    /** @prop {Function} */\n    onLoad: applyStyleOnLoad,\n    /**\n     * @deprecated since version 1.10.0, the property moved to `computeStyle` modifier\n     * @prop {Boolean} gpuAcceleration=true\n     * If true, it uses the CSS 3D transformation to position the popper.\n     * Otherwise, it will use the `top` and `left` properties\n     */\n    gpuAcceleration: undefined\n  }\n};\n\n/**\n * The `dataObject` is an object containing all the information used by Popper.js.\n * This object is passed to modifiers and to the `onCreate` and `onUpdate` callbacks.\n * @name dataObject\n * @property {Object} data.instance The Popper.js instance\n * @property {String} data.placement Placement applied to popper\n * @property {String} data.originalPlacement Placement originally defined on init\n * @property {Boolean} data.flipped True if popper has been flipped by flip modifier\n * @property {Boolean} data.hide True if the reference element is out of boundaries, useful to know when to hide the popper\n * @property {HTMLElement} data.arrowElement Node used as arrow by arrow modifier\n * @property {Object} data.styles Any CSS property defined here will be applied to the popper. It expects the JavaScript nomenclature (eg. `marginBottom`)\n * @property {Object} data.arrowStyles Any CSS property defined here will be applied to the popper arrow. It expects the JavaScript nomenclature (eg. `marginBottom`)\n * @property {Object} data.boundaries Offsets of the popper boundaries\n * @property {Object} data.offsets The measurements of popper, reference and arrow elements\n * @property {Object} data.offsets.popper `top`, `left`, `width`, `height` values\n * @property {Object} data.offsets.reference `top`, `left`, `width`, `height` values\n * @property {Object} data.offsets.arrow] `top` and `left` offsets, only one of them will be different from 0\n */\n\n/**\n * Default options provided to Popper.js constructor.<br />\n * These can be overridden using the `options` argument of Popper.js.<br />\n * To override an option, simply pass an object with the same\n * structure of the `options` object, as the 3rd argument. For example:\n * ```\n * new Popper(ref, pop, {\n *   modifiers: {\n *     preventOverflow: { enabled: false }\n *   }\n * })\n * ```\n * @type {Object}\n * @static\n * @memberof Popper\n */\nvar Defaults = {\n  /**\n   * Popper's placement.\n   * @prop {Popper.placements} placement='bottom'\n   */\n  placement: 'bottom',\n\n  /**\n   * Set this to true if you want popper to position it self in 'fixed' mode\n   * @prop {Boolean} positionFixed=false\n   */\n  positionFixed: false,\n\n  /**\n   * Whether events (resize, scroll) are initially enabled.\n   * @prop {Boolean} eventsEnabled=true\n   */\n  eventsEnabled: true,\n\n  /**\n   * Set to true if you want to automatically remove the popper when\n   * you call the `destroy` method.\n   * @prop {Boolean} removeOnDestroy=false\n   */\n  removeOnDestroy: false,\n\n  /**\n   * Callback called when the popper is created.<br />\n   * By default, it is set to no-op.<br />\n   * Access Popper.js instance with `data.instance`.\n   * @prop {onCreate}\n   */\n  onCreate: function onCreate() {},\n\n  /**\n   * Callback called when the popper is updated. This callback is not called\n   * on the initialization/creation of the popper, but only on subsequent\n   * updates.<br />\n   * By default, it is set to no-op.<br />\n   * Access Popper.js instance with `data.instance`.\n   * @prop {onUpdate}\n   */\n  onUpdate: function onUpdate() {},\n\n  /**\n   * List of modifiers used to modify the offsets before they are applied to the popper.\n   * They provide most of the functionalities of Popper.js.\n   * @prop {modifiers}\n   */\n  modifiers: modifiers\n};\n\n/**\n * @callback onCreate\n * @param {dataObject} data\n */\n\n/**\n * @callback onUpdate\n * @param {dataObject} data\n */\n\n// Utils\n// Methods\nvar Popper = function () {\n  /**\n   * Creates a new Popper.js instance.\n   * @class Popper\n   * @param {Element|referenceObject} reference - The reference element used to position the popper\n   * @param {Element} popper - The HTML / XML element used as the popper\n   * @param {Object} options - Your custom options to override the ones defined in [Defaults](#defaults)\n   * @return {Object} instance - The generated Popper.js instance\n   */\n  function Popper(reference, popper) {\n    var _this = this;\n\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    classCallCheck(this, Popper);\n\n    this.scheduleUpdate = function () {\n      return requestAnimationFrame(_this.update);\n    };\n\n    // make update() debounced, so that it only runs at most once-per-tick\n    this.update = debounce(this.update.bind(this));\n\n    // with {} we create a new object with the options inside it\n    this.options = _extends({}, Popper.Defaults, options);\n\n    // init state\n    this.state = {\n      isDestroyed: false,\n      isCreated: false,\n      scrollParents: []\n    };\n\n    // get reference and popper elements (allow jQuery wrappers)\n    this.reference = reference && reference.jquery ? reference[0] : reference;\n    this.popper = popper && popper.jquery ? popper[0] : popper;\n\n    // Deep merge modifiers options\n    this.options.modifiers = {};\n    Object.keys(_extends({}, Popper.Defaults.modifiers, options.modifiers)).forEach(function (name) {\n      _this.options.modifiers[name] = _extends({}, Popper.Defaults.modifiers[name] || {}, options.modifiers ? options.modifiers[name] : {});\n    });\n\n    // Refactoring modifiers' list (Object => Array)\n    this.modifiers = Object.keys(this.options.modifiers).map(function (name) {\n      return _extends({\n        name: name\n      }, _this.options.modifiers[name]);\n    })\n    // sort the modifiers by order\n    .sort(function (a, b) {\n      return a.order - b.order;\n    });\n\n    // modifiers have the ability to execute arbitrary code when Popper.js get inited\n    // such code is executed in the same order of its modifier\n    // they could add new properties to their options configuration\n    // BE AWARE: don't add options to `options.modifiers.name` but to `modifierOptions`!\n    this.modifiers.forEach(function (modifierOptions) {\n      if (modifierOptions.enabled && isFunction(modifierOptions.onLoad)) {\n        modifierOptions.onLoad(_this.reference, _this.popper, _this.options, modifierOptions, _this.state);\n      }\n    });\n\n    // fire the first update to position the popper in the right place\n    this.update();\n\n    var eventsEnabled = this.options.eventsEnabled;\n    if (eventsEnabled) {\n      // setup event listeners, they will take care of update the position in specific situations\n      this.enableEventListeners();\n    }\n\n    this.state.eventsEnabled = eventsEnabled;\n  }\n\n  // We can't use class properties because they don't get listed in the\n  // class prototype and break stuff like Sinon stubs\n\n\n  createClass(Popper, [{\n    key: 'update',\n    value: function update$$1() {\n      return update.call(this);\n    }\n  }, {\n    key: 'destroy',\n    value: function destroy$$1() {\n      return destroy.call(this);\n    }\n  }, {\n    key: 'enableEventListeners',\n    value: function enableEventListeners$$1() {\n      return enableEventListeners.call(this);\n    }\n  }, {\n    key: 'disableEventListeners',\n    value: function disableEventListeners$$1() {\n      return disableEventListeners.call(this);\n    }\n\n    /**\n     * Schedules an update. It will run on the next UI update available.\n     * @method scheduleUpdate\n     * @memberof Popper\n     */\n\n\n    /**\n     * Collection of utilities useful when writing custom modifiers.\n     * Starting from version 1.7, this method is available only if you\n     * include `popper-utils.js` before `popper.js`.\n     *\n     * **DEPRECATION**: This way to access PopperUtils is deprecated\n     * and will be removed in v2! Use the PopperUtils module directly instead.\n     * Due to the high instability of the methods contained in Utils, we can't\n     * guarantee them to follow semver. Use them at your own risk!\n     * @static\n     * @private\n     * @type {Object}\n     * @deprecated since version 1.8\n     * @member Utils\n     * @memberof Popper\n     */\n\n  }]);\n  return Popper;\n}();\n\n/**\n * The `referenceObject` is an object that provides an interface compatible with Popper.js\n * and lets you use it as replacement of a real DOM node.<br />\n * You can use this method to position a popper relatively to a set of coordinates\n * in case you don't have a DOM node to use as reference.\n *\n * ```\n * new Popper(referenceObject, popperNode);\n * ```\n *\n * NB: This feature isn't supported in Internet Explorer 10.\n * @name referenceObject\n * @property {Function} data.getBoundingClientRect\n * A function that returns a set of coordinates compatible with the native `getBoundingClientRect` method.\n * @property {number} data.clientWidth\n * An ES6 getter that will return the width of the virtual reference element.\n * @property {number} data.clientHeight\n * An ES6 getter that will return the height of the virtual reference element.\n */\n\n\nPopper.Utils = (typeof window !== 'undefined' ? window : global).PopperUtils;\nPopper.placements = placements;\nPopper.Defaults = Defaults;\n\nexport default Popper;\n//# sourceMappingURL=popper.js.map\n","\"use strict\";\n\nexports.__esModule = true;\nexports.default = exports.BvEvent = void 0;\n\nvar _object = require(\"./object\");\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar BvEvent =\n/*#__PURE__*/\nfunction () {\n  function BvEvent(type) {\n    var eventInit = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    _classCallCheck(this, BvEvent);\n\n    // Start by emulating native Event constructor.\n    if (!type) {\n      /* istanbul ignore next */\n      throw new TypeError(\"Failed to construct '\".concat(this.constructor.name, \"'. 1 argument required, \").concat(arguments.length, \" given.\"));\n    } // Assign defaults first, the eventInit,\n    // and the type last so it can't be overwritten.\n\n\n    (0, _object.assign)(this, BvEvent.Defaults, this.constructor.Defaults, eventInit, {\n      type: type\n    }); // Freeze some props as readonly, but leave them enumerable.\n\n    (0, _object.defineProperties)(this, {\n      type: (0, _object.readonlyDescriptor)(),\n      cancelable: (0, _object.readonlyDescriptor)(),\n      nativeEvent: (0, _object.readonlyDescriptor)(),\n      target: (0, _object.readonlyDescriptor)(),\n      relatedTarget: (0, _object.readonlyDescriptor)(),\n      vueTarget: (0, _object.readonlyDescriptor)(),\n      componentId: (0, _object.readonlyDescriptor)()\n    }); // Create a private variable using closure scoping.\n\n    var defaultPrevented = false; // Recreate preventDefault method. One way setter.\n\n    this.preventDefault = function preventDefault() {\n      if (this.cancelable) {\n        defaultPrevented = true;\n      }\n    }; // Create 'defaultPrevented' publicly accessible prop\n    // that can only be altered by the preventDefault method.\n\n\n    (0, _object.defineProperty)(this, 'defaultPrevented', {\n      enumerable: true,\n      get: function get() {\n        return defaultPrevented;\n      }\n    });\n  }\n\n  _createClass(BvEvent, null, [{\n    key: \"Defaults\",\n    get: function get() {\n      return {\n        type: '',\n        cancelable: true,\n        nativeEvent: null,\n        target: null,\n        relatedTarget: null,\n        vueTarget: null,\n        componentId: null\n      };\n    }\n  }]);\n\n  return BvEvent;\n}(); // Named Exports\n\n\nexports.BvEvent = BvEvent;\n// Default Export\nvar _default = BvEvent;\nexports.default = _default;"],"sourceRoot":""}